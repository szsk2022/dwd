// Code generated by go-bindata. (@generated) DO NOT EDIT.

//Package main generated by go-bindata.// sources:
// Remover/DDL.txt
// Remover/DDL22.txt
// Remover/FDL.txt
// Remover/REGS/Antivirus_d.reg
// Remover/REGS/DisableAntivirusProtection.reg
// Remover/REGS/DisableDefenderPolicies.reg
// Remover/REGS/DisableDefenderandSecurityCenterNotifications.reg
// Remover/REGS/DisableDevDriveProtection.reg
// Remover/REGS/DisableLSAProtection.reg
// Remover/REGS/DisableMaintenanceTaskreportinginSecurityHealthUI.reg
// Remover/REGS/DisableMicrosoftVulnerabileDriverBlocklist.reg
// Remover/REGS/DisableSmartScreen.reg
// Remover/REGS/DisableSpyNetTelemetry.reg
// Remover/REGS/DisableSystemMitigations.reg
// Remover/REGS/DisableTamperProtection.reg
// Remover/REGS/DisableUAC.reg
// Remover/REGS/DisableVBS.reg
// Remover/REGS/ExploitGuard_d.reg
// Remover/REGS/MitigationofFaultTorelantHeap.reg
// Remover/REGS/NomoreDelayandTimeouts.reg
// Remover/REGS/RemovalofAnti-PhishingServices.reg
// Remover/REGS/RemovalofSecHealthUI.reg
// Remover/REGS/RemovalofWindowsDefenderAntivirus.reg
// Remover/REGS/RemovalofWindowsSecurityActionCenter.reg
// Remover/REGS/RemoveDefenderTasks.reg
// Remover/REGS/RemoveSecurityandMaintenance.reg
// Remover/REGS/RemoveServices.reg
// Remover/REGS/RemoveShellAssociation.reg
// Remover/REGS/RemoveSignatureUpdates.reg
// Remover/REGS/RemoveStartupEntries.reg
// Remover/REGS/RemoveWindowsDefenderFirewallRules.reg
// Remover/REGS/RemoveWindowsWebThreat.reg
// Remover/REGS/RemoverofDefenderContextMenu.reg
// Remover/REGS/WindowsSettingsPageVisibility.reg
// Remover/TKL.txt
package main

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

// Name return file name
func (fi bindataFileInfo) Name() string {
	return fi.name
}

// Size return file size
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}

// Mode return file mode
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}

// ModTime return file modify time
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}

// IsDir return file whether a directory
func (fi bindataFileInfo) IsDir() bool {
	return fi.mode&os.ModeDir != 0
}

// Sys return file is sys mode
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _removerDdlTxt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xa4\x92\x51\x6f\xd3\x30\x10\xc7\xdf\xf9\x14\xd1\x9e\x00\x69\x15\x1b\xa3\x9a\x78\x0b\x8d\x80\x3d\x94\x45\x78\xc8\x2f\x96\x2a\xcf\xbe\x24\x16\x89\x1d\x9d\x6f\x71\xf2\xed\x51\x95\x44\xa2\x34\x69\x4b\xf6\x6a\xff\xfe\x77\xbe\xdf\xf9\x6a\xf3\x59\xa4\xe8\x72\x94\x55\xf4\xd5\x94\xe0\xa3\xb7\xed\xfd\xfa\x9d\xe0\xc6\x6a\x17\x7c\x94\x40\x06\x56\x03\x5e\xbd\xb9\x94\x8c\x62\xdd\x48\xab\x40\x47\x4f\x05\x82\xa4\x28\x45\x47\xa0\xc8\x38\x3b\x51\xe4\x92\x46\x8b\x5b\x24\x92\xa4\xd8\x1a\x85\xce\xbb\x8c\x4e\xb7\x3a\xc3\xbe\xb2\x25\x03\xf5\x82\x86\xba\xe8\x3b\xc8\x92\x8a\x3e\xc2\x1f\x7e\x24\x8f\x9c\x09\xd6\x79\x82\xea\xe3\xad\xd0\x68\x1a\x40\x2f\x82\x1e\x80\x3e\x2d\xbe\xc9\x0a\xbe\x48\x4c\x11\x3c\x58\x05\x1c\x0d\x8d\xaf\x1f\x11\xd6\x79\xfe\xc8\xd7\x77\xe3\x41\xea\x02\x20\x2b\xa0\x2c\x45\x73\xb3\xfa\x20\xb6\x4e\xbf\xec\x55\x1e\xce\xbe\x34\x9d\x02\x66\x0e\xab\xbd\x90\xa3\x42\xfd\x28\xfd\x9c\x31\x11\x78\x92\x7b\x4b\x9b\xd2\x80\xa5\x19\x7a\xd4\x73\x60\xe7\x08\xca\xb1\x9a\xb9\x7a\x92\xfe\xb7\x3f\xd6\x3e\xb3\xf1\xe9\xf8\x6e\x6b\x72\x94\x04\x7a\x79\x1d\x0e\xcf\xfd\xef\x48\x20\x63\x8d\x9a\xa3\x16\x6e\xe8\xbf\xd2\x67\x36\x14\xd7\xf5\x5f\xbe\x56\xc3\xe5\x2a\xae\xeb\x9f\x50\xaf\x36\x45\x1b\xd7\xf5\x4e\x85\x4f\xf6\xa6\xb8\xa5\xb6\x83\xd0\x1d\x56\xe1\xc6\xb2\x96\x09\x59\xe9\xf5\xdd\xce\x0f\xdb\xbb\x76\x8a\x64\xee\xec\xfb\x13\x6c\xe8\x0f\xaf\xf5\xf0\xce\x69\x36\xb8\x70\x31\xdb\xde\xaf\xcf\x91\xcf\x4a\x7a\xd2\xcd\xa4\xd2\x19\x13\x0c\x54\xff\x19\x7f\x3d\xfc\xe3\xe1\x4f\x00\x00\x00\xff\xff\xde\x39\x23\xaf\x32\x05\x00\x00")

func removerDdlTxtBytes() ([]byte, error) {
	return bindataRead(
		_removerDdlTxt,
		"Remover/DDL.txt",
	)
}

func removerDdlTxt() (*asset, error) {
	bytes, err := removerDdlTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "Remover/DDL.txt", size: 1330, mode: os.FileMode(438), modTime: time.Unix(1704369724, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _removerDdl22Txt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xa4\x92\xc1\x4b\xc3\x30\x18\xc5\xef\xfe\x15\x9e\x85\x15\x37\xe7\x10\x6f\x75\x03\xf5\x30\x1c\x66\xd2\x4b\x60\x64\xc9\xeb\x1a\x6c\x93\x90\x7c\x5b\xda\xff\xde\xc3\xaa\x54\x69\x87\xce\x53\xe1\xfb\x7e\xef\xd1\xf7\xbd\xcc\xef\x79\xa6\x8d\xb2\x31\xf0\x47\x51\xe1\x41\xf8\x95\x47\x80\x91\xc8\xbc\x26\xf8\x8b\x0e\xc0\x9a\x90\xbd\x64\xb3\xe9\xe7\x60\x65\x23\x3c\x2b\x50\x96\xfc\x30\x4e\xae\xf9\xd2\xaa\x7d\x89\xc0\x17\xc8\x61\xd4\xff\xb4\x2b\xf8\xdc\xfa\x4a\x18\x89\x1f\x36\x84\xea\x66\xc2\x9f\x20\x4a\x2a\x52\x22\x04\x12\xa4\xad\x99\x97\x1a\x86\x7a\x59\x06\xb9\xf7\x9a\x9a\xa3\xa6\x1f\xd9\xf9\xaa\x77\xb1\x16\xe1\x3d\xf0\xa5\x96\xde\x06\x9b\xd3\x17\xd0\x7e\x2f\x07\xb2\x76\xc4\x9b\xa5\xde\x79\x41\x50\xe7\xba\x64\xd8\xae\x0b\x0f\x41\x0b\xe4\xec\x20\xfb\x99\xb3\x1a\xf9\x93\xf6\x64\x23\xa9\x73\x9d\x2b\x25\xed\x32\x49\x9d\x7b\x85\x4b\xe6\x45\x9d\x3a\xb7\x91\xf1\xd6\x8c\x8b\x09\xd5\x0d\x62\xd3\xf5\xc8\xb4\x61\x35\xe3\xa2\x52\xb3\xe9\x26\xb4\x6d\x8d\xac\x24\xb1\xb3\xe6\x6a\x90\x8c\xc7\xe1\x48\xb5\x7f\xd8\x47\x46\x1b\x7f\x49\xd6\x77\xb3\xd3\xdc\x56\x8a\x40\xea\xd0\x73\xc4\x81\xf4\x0c\xf2\xf8\xe4\xde\x9e\xbf\x67\xff\x08\x00\x00\xff\xff\xe4\x75\x5a\xbf\x75\x03\x00\x00")

func removerDdl22TxtBytes() ([]byte, error) {
	return bindataRead(
		_removerDdl22Txt,
		"Remover/DDL22.txt",
	)
}

func removerDdl22Txt() (*asset, error) {
	bytes, err := removerDdl22TxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "Remover/DDL22.txt", size: 885, mode: os.FileMode(438), modTime: time.Unix(1704369724, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _removerFdlTxt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xa4\x93\x41\x8f\xd3\x30\x10\x85\xef\xfc\x8c\x3d\x22\x91\x03\xac\x2a\xc4\xad\x9b\xb4\xbb\x1c\x76\x59\x11\x90\x39\x44\x5a\x19\x7b\x5a\x46\xd8\xe3\x68\xc6\x89\x9b\x7f\x8f\x4a\x38\xd1\xc6\x75\xb5\xd7\xf8\x7b\x9f\x93\xa7\x97\x9b\xfa\x53\xa7\x90\x6c\x48\xd2\xb5\x93\xa8\x2f\x6a\x75\xdb\xd5\xc1\xf7\x3a\x7e\x03\xf7\x75\x20\x02\xae\xe0\x00\x37\x6f\xce\x92\x0d\x8c\x68\xa0\x06\x92\x41\x32\xd8\xbd\xf6\x70\xa7\xf9\x99\x41\x80\x0c\x28\xc6\x98\xd5\x8a\xd7\x1c\xc5\x30\x00\x55\xd6\xb9\x02\xea\x9c\x2b\x82\xff\xf0\xbe\x6b\x94\xfa\xfc\x54\x6d\x7e\x6c\x16\xce\xcb\xdf\x6d\xe6\x5b\x30\x03\x63\x9c\xd6\x64\x1f\x35\x52\x04\xd2\x64\xa0\xea\x69\x7f\x55\xe0\x65\xc3\x1c\xb8\x20\xf6\x00\xda\xc5\x5f\xeb\x3d\x50\x3c\xdb\xc5\x39\xba\x0e\x0c\xc5\xf0\x43\x90\x58\xf0\xbd\x33\xfc\xcc\xe1\x30\xb5\x71\xf8\x59\xac\x6f\x81\x8f\x1b\x29\xbe\xa1\x95\xf0\xdd\xfe\x2e\xd7\x4f\x12\x59\x4f\xc5\xfa\xbc\xdb\x32\x8e\xc0\xd2\xb5\x7b\xf6\x73\xe5\x32\xc9\x05\x56\xd9\xbb\x10\xca\xc0\x06\xc6\xad\x2b\x43\xb7\xe8\x8e\x3b\x2c\x41\x9f\x50\x1a\x1e\x4f\x51\xf9\x1f\xf5\x22\x60\xcc\x71\x1b\xcb\xda\x4b\xbf\xde\x29\xb5\xdc\x7c\x12\xa3\xad\x47\x1a\xf0\x02\xd4\x63\xe6\xae\x24\x06\x65\xc4\x5d\x1e\xe9\x8f\xc3\x94\xfc\x30\x93\x18\x19\xcd\x29\x50\x07\x8a\x1a\xe9\x6f\x9b\xf3\xa3\x06\x76\x40\x16\x78\xdd\xf7\x0e\x8d\x8e\x18\xe8\x7e\xd0\x6c\xab\x84\x7e\x31\x2b\xf3\xd2\xed\xf5\x12\x85\xd4\x1e\xda\x6e\x8b\x0e\x1e\x75\x2f\x9d\xf6\x76\x75\xfb\x92\xe6\xd3\x77\xf6\x9f\xe7\x6d\xe5\x35\xe1\x0e\x24\xe6\xd3\x29\xa4\x57\xa4\x0f\x1f\x57\xb9\xec\x9f\x00\x00\x00\xff\xff\xc7\x9e\x5e\xa7\x31\x06\x00\x00")

func removerFdlTxtBytes() ([]byte, error) {
	return bindataRead(
		_removerFdlTxt,
		"Remover/FDL.txt",
	)
}

func removerFdlTxt() (*asset, error) {
	bytes, err := removerFdlTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "Remover/FDL.txt", size: 1585, mode: os.FileMode(438), modTime: time.Unix(1704369724, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _removerRegsAntivirus_dReg = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xbc\x96\x61\x6f\xda\x30\x10\x86\xbf\xf3\x2b\x22\x7e\xc0\x44\x37\x4d\x9a\x26\xed\x43\x1a\x42\x8b\x06\x34\x4a\xa0\x5d\xb5\xa0\xca\x8d\x8f\xd4\xaa\x73\x17\xd9\x17\x28\xff\x7e\x32\x84\xb2\x52\x58\x59\x45\xca\x27\x48\x4e\x7e\x7c\xbc\xef\xbd\xf6\x8d\x42\x49\x0b\xeb\xc5\x90\x2b\xcb\x66\xe9\x85\x52\x31\x19\xef\x1a\x8c\x55\x84\xde\xd7\x4f\x9d\x4e\xab\xf5\xfb\xf2\x67\x78\x7b\x37\xb8\x0a\xfc\xc1\xdd\xd0\x0f\x2e\xfb\xa3\x30\x4d\xae\x7a\xe3\x1b\x3f\x0e\xd3\x88\xb4\xca\x14\xd8\x74\xa8\x32\x43\x96\x66\x9c\x6e\x56\xed\xc2\x0c\x50\x82\x99\xb6\xda\xd1\xc4\x8f\x0c\x31\x64\xac\x08\xdb\x3f\xe4\x82\x8c\xfc\xde\xa9\x3f\x6f\x10\xb6\x0b\xaf\x58\xcb\xa1\x40\x91\x83\x49\x25\xcc\x44\xa5\x39\xdd\x60\x52\x5f\x6b\x5a\xf4\x91\x4d\xe5\x36\x1f\x19\x98\x03\x3a\x5e\xb2\xb4\x0c\xc5\xb4\xd5\x9e\x0b\x5d\x41\xa3\xf4\x2b\xf4\xb3\x0c\xac\xdd\x36\xfb\x21\xd8\x18\x84\x66\x55\xc0\x90\xd0\xe9\xa7\x30\x3f\x80\x3d\x29\x75\x62\xc1\x4c\xfa\xeb\x86\x1b\x6f\x73\x9e\x07\xd1\x64\x40\x42\xf6\x44\xc6\x64\xf6\xf3\xbe\x7c\x3e\x15\x2f\xd0\x54\xc9\x73\x4d\xd9\xe3\x00\xe6\xa0\x9b\x6e\x6f\x85\x0b\x9f\xd8\xfd\x92\x63\x55\x00\x55\xdc\x34\xb3\x2b\x96\x76\x4c\x31\xb0\x50\x18\x68\x10\x08\x72\x28\xf4\x42\x18\x68\x9a\x1c\xa2\xb8\xd7\x10\x10\xb2\x21\xad\x41\xf6\x48\x4b\x30\x1f\x63\xa4\x35\x7b\x04\xbc\x20\xf3\xf8\x71\x63\xfa\x22\x00\x9b\x86\x25\x2a\x47\xc1\x95\x81\x49\x29\x05\x43\x1f\x19\xcc\x5c\x1c\x30\xf1\xd9\xb7\x93\x61\xab\xfb\x42\x71\x22\x8a\x52\x83\x0d\x08\x2d\xe0\x7b\x4d\x7c\xc4\xa9\x92\x86\x4f\x99\x5e\x25\xbd\xf3\x4c\x57\x59\xa7\xab\x5f\x31\x6d\x9f\xef\x40\xcf\x4e\x00\x1d\x96\x21\xe6\x0a\xdd\x88\xb8\xaf\x8e\x19\x55\xbb\xa0\x8e\x7b\xb9\x93\x20\xfb\x4a\xce\xc5\xcc\xee\x0c\xfd\xeb\xb2\x35\xa4\xa7\x34\x5c\x0a\xfb\x10\x50\x51\x56\x2c\xde\x71\x8c\x1e\xd3\xdd\xa8\x9f\xa4\x4e\xb8\xaa\x00\x63\xd3\x7e\x94\x4c\x5b\xed\xf1\x83\x21\x66\x0d\x5d\xa8\xdd\x1b\xba\x63\xd5\xc6\x82\x5f\x8b\xba\x91\xe1\xd9\x80\x31\xb0\x32\x50\x00\xee\x36\x76\xf6\x5c\xeb\xc6\x82\x32\xd2\x31\x64\x94\xa3\xda\xd3\xd9\x29\x74\x5b\x5b\xd7\xab\xbd\xbb\x35\x4c\x92\x09\x44\x85\x79\x1d\x08\xee\x6f\x6e\xc2\x36\x93\x5f\x5e\x40\x38\x53\x79\x65\x44\x9d\x00\x49\x55\x96\x06\xac\x8d\xe1\x9e\x88\x47\xc4\x6a\xa6\xb2\x7d\xc2\x9e\x82\xbf\xfb\xc0\x0b\x9f\x4a\x4d\x8a\xbd\x8b\x4a\x18\x99\x6e\xa3\xd8\x5b\x67\xb1\xf7\x1c\xc6\xff\xca\xea\x06\x1c\xf8\xc6\x46\x6b\x99\xbc\x17\x59\x7a\x20\xd2\xff\xef\xea\x73\xcc\xe6\x62\x28\xc9\xf0\xfa\x76\x55\xfb\x27\xc4\x07\x81\x19\xc8\xbf\xf5\x7b\x6d\xa0\x4d\xf5\x05\x20\x18\x95\xc5\x10\x91\xe1\x3d\x65\x37\x65\x39\x36\x22\x53\x98\x1f\xc8\x8c\x6d\x81\x0b\x02\x42\x37\x89\x47\xaa\x70\x9b\x8c\xc3\x61\x1a\x54\xc6\x00\x72\xad\x67\x02\xbc\xd1\x3e\x0d\xfa\xf5\x90\x4c\x5b\xed\x6b\x30\x6a\xa6\x40\xfa\x28\x63\x70\x79\xe3\xe6\x74\xf5\x32\xe1\x3d\x73\xff\x27\x00\x00\xff\xff\x46\xed\xcb\x1c\x47\x0c\x00\x00")

func removerRegsAntivirus_dRegBytes() ([]byte, error) {
	return bindataRead(
		_removerRegsAntivirus_dReg,
		"Remover/REGS/Antivirus_d.reg",
	)
}

func removerRegsAntivirus_dReg() (*asset, error) {
	bytes, err := removerRegsAntivirus_dRegBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "Remover/REGS/Antivirus_d.reg", size: 3143, mode: os.FileMode(438), modTime: time.Unix(1704369724, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _removerRegsDisableantivirusprotectionReg = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb4\x54\x4b\x6f\xda\x40\x10\xbe\xfb\x57\x58\xbe\xb7\x22\xe9\xe3\xd0\xaa\x07\x17\x88\x12\x05\x30\xc2\x28\xa8\xaa\x51\xb4\xb5\x07\x77\xd4\x65\x06\xcd\x8e\x8d\xf8\xf7\xd5\x3a\x10\x57\x71\xca\x43\x6a\x39\xe2\x6f\xbf\xd7\xec\xec\x02\xa9\xe0\xad\x0b\x67\x50\xa2\x53\xd9\x85\xc3\x02\x95\x25\x7c\x00\x71\xc8\x14\x7e\x78\xdb\xeb\x05\xc1\xe7\xb0\x40\x67\x7e\x58\xa4\x32\x8c\x49\xb1\x46\xa9\x5c\x10\x7c\xbf\xbd\x1f\x7e\x7b\x1c\x25\xfd\x78\xf4\x38\x8e\xfb\xb7\x77\x93\x61\x96\x26\x37\xf3\x45\x3c\x1b\x66\x53\xb6\x98\x23\xb8\x6c\x8c\xb9\xb0\xe3\x95\x66\x07\xb1\x01\xac\x80\x0a\x90\x65\x10\x0d\x1a\x5e\x98\x71\xa5\x48\x60\x77\x73\xf3\x0b\xa9\x8c\x73\x45\xa6\xe8\x4b\xb1\x65\x29\x3e\xf5\x9e\x7e\x57\x41\x94\x82\xd4\x98\xc3\x3d\xc0\x26\xb6\x58\xc3\x0b\x44\x2f\x88\x62\x6b\x79\x7b\x63\x9c\xee\xa1\xa9\x1a\xd1\x6a\xd3\x05\xee\x85\x47\x9c\x1b\x1b\x17\x6b\xa4\x31\x48\xf9\x92\xf0\xaa\x8d\x0e\x21\xd7\x20\x5b\x41\xf5\x25\x08\x18\x1b\x2a\xae\x21\xdc\x08\x2b\x34\x76\x43\x07\xea\x3f\xfe\x83\x62\xb2\x19\x18\xfb\x66\xee\xf9\xa7\xcf\xfc\xcb\x20\x6a\xdc\xa6\x4f\x32\x49\x0d\x22\x58\xc0\x3e\x48\x42\x71\x9e\x83\x73\x2d\xbe\x9b\xf9\xb5\xe3\x5e\xc9\x07\x49\x73\x43\x03\x94\x4b\x8e\xee\x95\xef\x92\xf8\xe1\x52\xd5\xfd\xd1\xaf\xf0\xd3\xd4\xc8\x32\x66\xf2\xb7\x0e\xa9\xbc\x4c\x99\x54\x2a\x7f\x4d\xa7\x02\x35\x90\x97\x4f\x77\x4e\x61\x7d\x11\xcb\xa1\x81\x63\x26\xce\x89\x7a\xd5\xde\xe6\x53\x8c\x2d\xf4\x64\x03\x2d\xf4\xe4\x84\x5b\xa8\x1f\x66\x42\x07\x1b\x43\xf2\xff\x75\xc1\xe7\x8c\xfe\xba\xcd\x4e\x2b\x96\xb5\xd1\xa6\xee\x83\x83\x3e\x93\x0a\xdb\xbf\x1a\x39\x77\x42\x7f\x74\x67\xb6\x0b\x41\x85\x09\x2b\xae\x30\x37\xaf\xe6\x3c\xbe\x60\xed\x5e\x35\xab\xb6\x1b\x1b\x32\x25\x48\x56\xc0\xca\x54\x56\xb3\xe7\x2d\x6b\x1e\x8b\xee\x04\x96\x41\x54\x1b\x5b\x75\x5f\x97\xe3\xb2\x8b\x64\xf1\xf1\xfd\xbb\xeb\x09\x17\xf0\x1f\x1e\xbf\xdf\x01\x00\x00\xff\xff\x1a\x80\xa7\x23\xa9\x05\x00\x00")

func removerRegsDisableantivirusprotectionRegBytes() ([]byte, error) {
	return bindataRead(
		_removerRegsDisableantivirusprotectionReg,
		"Remover/REGS/DisableAntivirusProtection.reg",
	)
}

func removerRegsDisableantivirusprotectionReg() (*asset, error) {
	bytes, err := removerRegsDisableantivirusprotectionRegBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "Remover/REGS/DisableAntivirusProtection.reg", size: 1449, mode: os.FileMode(438), modTime: time.Unix(1704369724, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _removerRegsDisabledefenderpoliciesReg = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xbc\x59\x5d\x93\xda\x3a\x12\x7d\xe7\x57\xb8\x78\xdf\x2d\x98\x24\x5b\x5b\xbb\x75\x1f\x3c\x8c\xc9\x50\x19\x06\xae\x0d\xc3\x4d\x5d\xa6\x52\x8a\xdd\x40\xd7\xc8\x92\xab\x25\x9b\x21\xbf\xfe\x96\xfc\x81\x03\xd8\x7c\x24\xe0\x79\x62\xa0\xa5\x23\x75\xb7\x4e\xf7\x91\x66\x28\x02\xb9\x56\x96\x0b\x4b\x54\x9a\x36\x96\x13\xa0\x96\x64\xbd\x00\x29\x94\xc2\xfa\xf4\xef\x4e\xa7\xd5\xfa\xbf\xe5\x88\x85\x24\x1f\xac\x07\x54\xec\x3b\x47\xb1\xb4\xe4\xc2\x2a\x06\x3f\xc0\x02\x44\x00\x64\xd9\x42\x63\x82\x14\x2b\x6b\x2c\x39\xfa\x9b\x56\xeb\xef\xc7\x2f\xce\xd7\x6f\x4f\xa3\x9e\xfd\xf4\x6d\x68\xf7\x1e\x07\xcf\xce\xdc\x1b\xf5\x27\x33\xdb\x75\xe6\x43\xf4\x49\x2a\xb9\xd0\xf3\xcc\x7c\xc8\x04\x5b\x02\xcd\x03\x58\xb0\x98\xeb\x79\x31\xef\xdc\xe6\x5c\xae\x07\x23\xfb\x65\x4c\x52\x83\xaf\x51\x8a\xd7\x56\x3b\x61\x3c\x86\xf6\x1f\xc1\x5a\x52\xf0\xbf\x4e\xfe\x77\x02\x32\x05\x42\x50\x3f\x61\xef\xef\xe2\xb5\xd5\x1e\x4f\xed\x12\xe9\x00\xa1\x9d\x39\x01\x5c\x19\x6b\x14\xc0\x37\x13\xf6\x86\x62\x69\x57\x59\x77\x5b\x6d\x0f\x28\x41\x1f\xbe\x00\x44\x36\xc7\xe4\x70\xc5\xed\x74\x7b\x7d\xa6\x74\x6e\xea\x69\x46\x3a\x8e\x6a\x81\x9f\xa4\xcf\xb8\x1d\x84\x28\x86\x40\xcb\xfd\x09\xbb\x5b\x3b\x13\x0e\x2f\xda\xac\x19\x55\xd8\xb8\x4c\x04\x32\xc4\x1f\xe0\xf9\x2b\x08\x62\x0e\x13\xa6\xde\x26\x18\x82\xba\xd0\xa5\x97\x45\xd1\x26\x7f\x85\x09\x78\x3e\x13\x02\xc5\xf2\x17\xc3\x78\x19\xe6\x3d\xac\x58\x82\x92\x86\x52\x98\xe4\x6e\x0a\xb6\xc7\x65\x1c\xfc\x76\xc6\x5e\x86\xe9\x84\x0c\x79\xa3\xce\xed\xc7\x3c\x05\x1c\x89\x21\x8b\x22\x08\x9e\x41\xaf\x25\xbd\x3d\x10\x26\xa0\x1a\x5d\x81\x0b\xa1\x4c\x4c\xde\xa7\xd8\x8d\x3a\x61\x20\x34\xc5\x86\x30\xc7\x04\x09\x08\x13\x6e\x6f\xa3\x34\x84\x8d\xa0\x8f\x84\xed\xfb\xa0\x54\xc3\xb9\xe6\x02\xe3\x1a\x43\x68\xf8\x58\x15\x81\xcd\x13\xad\x8f\xbc\xa1\x3c\xf3\x7c\xc2\x48\x9f\xc8\xab\xee\x55\x21\xa7\x0a\x68\x3a\xc8\xa2\x7b\xf3\x3d\x26\xcb\xde\x78\xfa\x24\x59\xd0\x67\xbe\x96\x54\x8d\xf7\xe1\xee\x5a\x78\xbd\x15\xf8\x6f\x7d\x49\x1e\x2e\x05\xd3\x31\x81\xba\x87\x85\x24\x70\xe3\xd4\xbf\xc6\xcf\xb7\xde\x72\xca\xd0\xf7\x5c\xfa\x6f\x4f\x90\x00\x6f\x04\xce\x79\xd7\xe6\xbf\xc0\x94\x5a\x19\xeb\x5b\x63\x3e\xb0\x8d\x9a\x48\x17\x34\x43\xd1\xe3\xc0\x04\x04\x43\xc6\x4d\x4b\x70\x73\xe4\xac\x09\xe9\x31\xed\xaf\xe2\xa8\x20\xe9\x5b\x1f\x9b\x5d\xd4\x3f\x63\xf4\xdf\x9a\x80\x75\x44\x8a\x2a\x85\x26\xc9\x39\x04\x7d\xc9\x03\xa0\x66\x0e\x6e\x86\xfd\x24\xd7\xbd\xf1\x74\x4c\x28\x09\xf5\xa6\x99\xfd\xe6\x14\xdc\x5c\xdd\xd9\x69\xcc\x6f\x0d\x66\xea\x9b\x39\xa5\x26\x7f\x1e\x90\x9a\x01\x35\x60\x63\x46\x2c\x04\x0d\x35\x14\xdc\xb9\x1a\x05\x17\xad\x7f\xba\x43\x56\x97\x34\x57\xdc\x5b\x09\x67\x1c\x7b\x73\xbc\xa2\xb2\x4c\xa3\x80\x69\x18\x08\x0d\x94\xb0\x1a\x9a\xef\xfe\xf7\x6a\xb0\xf1\xf7\x10\xb5\xc7\xc2\x88\x83\xea\x49\xa1\x40\xfc\x2a\xcd\x9f\x21\x57\xe7\xce\xbb\xcf\xd3\xde\xd3\x10\x4d\xa1\xfc\x62\x2d\xcb\xef\x2f\x24\x81\x73\x40\x87\x91\x23\x96\x28\x4c\x08\xcd\x47\x83\x39\x8e\x0f\x95\x63\x7b\x18\xed\xd5\xd8\x2a\x93\x7b\xb6\x50\x7b\x65\xf1\xd0\x2c\x03\x31\xdd\xde\x23\x53\xab\x9e\x0c\xa3\x58\xb3\x4a\x7d\xfe\xfb\xbb\x7b\x1e\x78\x73\x13\xb8\x38\x04\x52\xf3\xc1\xd8\x7b\x6d\xb5\x27\x2b\x92\x5a\x73\x78\x80\x9c\x7e\x1c\xd3\xe8\x2b\x97\xe9\x0a\x45\x9f\x87\x61\x9b\x80\x2e\x68\x24\x08\x41\xec\x6f\xac\x14\xeb\x86\xd7\xa4\x2f\xb9\x0b\xbe\x5c\x0a\xac\xbc\x4b\xf8\xfd\x9d\x65\xa9\x6b\xe5\xb9\x5b\x26\x4c\x55\x53\x7d\x03\x78\x43\xa9\xff\x32\x21\xb6\x76\x68\xbc\xb8\x50\x39\x10\x14\xb5\xde\x3a\x94\xf4\xb5\xa6\x87\xea\xa8\xd6\x34\xd3\xb1\xc5\x32\xb2\x8c\xab\x35\xde\xbd\x8f\x3a\x34\x4b\x6f\x69\x3c\xd0\x1a\xc5\x72\x94\x00\x11\x06\x70\xee\x92\x3a\xd5\xc3\x8b\x95\xed\x54\xa4\xf3\x86\x9e\xb3\xe8\xe3\x43\x4f\xba\xfc\x04\x72\x9d\x44\xbe\x68\x96\x93\x29\xd2\x69\xb5\xcf\xf1\xd2\x5d\xab\x6d\x5c\x31\x64\xef\x1e\xfe\xd8\x8d\xf1\xa7\xee\x5d\x19\x63\xb1\x90\x14\xa6\x34\x53\x7a\x2d\xef\xf2\xea\x13\xe3\xcc\x9d\x96\x23\x5c\xb6\x9e\x11\x6a\x78\x96\x1a\x17\xe8\x57\xd1\xda\x35\x4e\x5f\xde\x08\x9b\x4e\x31\x8a\x8b\x4e\xb1\x7e\x51\xa0\xb4\x24\x18\x4b\x3c\xc2\x5a\x7b\xd7\x79\xf5\x4c\x78\x9a\x5f\x4a\xe3\x3d\xc9\x70\xca\x6e\xdb\xe4\xd7\xae\x72\xe7\x56\xac\x76\xba\x47\x88\x09\x95\x46\xff\x90\xf9\x4a\x9f\x44\x8c\x54\xe6\x93\x9a\xf9\xae\x12\xa8\xa2\x6e\x58\x59\xe7\x62\x2a\xfb\xf6\xbb\x7c\x29\x47\x73\xa5\x3c\x03\xdb\x51\xc0\x31\x01\xda\x0f\x77\xa7\xd5\xee\x4b\xf2\xf3\x0e\xa9\x4f\x32\x1c\x4e\x8f\x04\x31\xeb\xdf\x82\xbd\xc6\x6a\x24\xee\x99\xd6\x87\x93\x77\x5b\xed\xc2\x20\xbd\xd2\x9e\x56\x5c\x69\xef\x4d\x95\x87\xb4\x68\xd5\x0e\x4f\x6d\xbe\x94\x9d\x79\xe3\x68\x86\x7a\x25\x63\x9d\xf5\x24\x15\x57\xf0\xc5\x15\x37\x86\x3b\xbf\x76\x3f\x7e\xec\xec\x91\x7f\x36\xf1\x2d\x62\x1a\x6d\x04\xe8\xb2\xd8\xa5\x2d\x91\xad\xfb\x48\x4a\x7b\x00\x67\x16\x90\x6c\x16\x17\x22\x49\xba\x32\x97\x4f\x1b\x54\x74\xa7\x17\xea\x8b\x73\xb6\x3b\xfd\xcb\xea\x49\xb1\xc0\x65\x4c\x2c\xaf\xf2\x5e\x1c\x45\x04\x4a\xb9\xf0\x5d\x4a\x7d\x63\xae\x3b\x78\x9b\x72\xde\x23\x2e\x51\x5b\x9f\x63\x46\xc1\xbc\x54\xea\x56\x26\xd5\xad\xad\x56\x3f\x26\xe5\x6f\xd0\x6b\x9e\x58\x68\x4e\x98\xbb\xfd\x52\x8d\xfa\xbe\x70\x75\xb3\xd1\xec\x3f\x1f\x3f\xdc\x3d\xcb\x00\xce\x7c\x17\xbb\xe8\xe1\xeb\x62\xd7\x6c\x3f\xa5\xef\x88\xe1\xf6\x96\xea\xfa\x0f\x68\x67\xbe\xdc\x9d\xf3\x8c\xf6\x93\xcd\x0b\xd2\x81\x04\xba\x96\x1b\x0c\x7d\x3c\xa7\xf4\x91\x7d\x38\x72\xc0\x6b\x68\xe3\xe8\xa0\x6b\x74\xf6\xf9\xdc\x65\x9a\x38\x62\xc5\x84\x0f\xc1\xcf\x27\xbd\xbe\xb4\x7e\x06\x01\x84\xbe\x0b\x63\x49\xba\xc2\x6c\x16\x45\x13\x62\x3e\x8a\x65\x8d\x8e\x2c\x0d\x8c\x38\x94\xc2\xa8\xb3\x33\x37\xfa\xd5\x9b\x38\xc3\x79\x2f\x26\x02\xa1\xf3\x93\xef\x81\x2e\x58\x62\xde\x1b\xe4\xc2\xe9\xb5\xd5\x7e\x01\xc2\x05\x42\x60\x8b\xc0\x05\xa3\x41\x8d\x76\x4b\x7f\xf4\x74\x95\x16\xfc\x27\x00\x00\xff\xff\x85\x34\xe0\x7d\x62\x1f\x00\x00")

func removerRegsDisabledefenderpoliciesRegBytes() ([]byte, error) {
	return bindataRead(
		_removerRegsDisabledefenderpoliciesReg,
		"Remover/REGS/DisableDefenderPolicies.reg",
	)
}

func removerRegsDisabledefenderpoliciesReg() (*asset, error) {
	bytes, err := removerRegsDisabledefenderpoliciesRegBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "Remover/REGS/DisableDefenderPolicies.reg", size: 8034, mode: os.FileMode(438), modTime: time.Unix(1704369724, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _removerRegsDisabledefenderandsecuritycenternotificationsReg = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xc4\x93\x4f\x8b\xdb\x30\x10\xc5\xef\xfe\x14\xc2\xf7\x06\xf7\xd0\x4b\x4b\x0f\xc6\xab\x25\xa5\xeb\xa4\xd8\xd9\x0d\xa5\x0a\x41\xb5\xc6\xe9\x80\x3b\x82\xd1\x38\xc1\xdf\xbe\xa4\xb1\x21\x89\xf3\xef\xd4\xfa\xea\x27\xbd\xdf\xd3\x9b\x59\x22\x39\xbf\x0b\xaa\x80\x0d\x06\xe1\x4e\x69\x87\xe2\x59\xbd\x01\x07\xf4\xa4\x3e\x4c\x92\x24\x8a\x3e\xa9\x27\x0c\xf6\x67\x03\x6a\xd0\x3f\x41\x0d\xe4\x80\x55\x09\x55\xcb\x28\x9d\xca\x80\x04\x58\xcd\xbc\x60\x8d\x95\x15\xf4\x14\xa2\xe8\xc7\xf4\xab\xfe\xbe\x7e\x99\x67\xe9\xcb\x3a\x4f\xb3\xe9\x97\x99\x36\xe5\xfc\x79\xb1\x4c\x0b\x6d\x72\xac\xd8\x07\x5f\x8b\xf9\xe6\x1b\xac\xba\xdc\x92\xdd\x00\x1b\x07\xb5\x6d\x1b\x31\xbd\xd9\xe0\x35\x58\x1d\x9c\x4c\x8f\xa4\xe9\x97\xa5\x0a\xdc\x89\xf1\x2a\x8a\xb7\xb6\x69\x21\xfe\xec\x76\x9e\xdd\xc7\xe4\xf0\xbd\xff\x17\x40\xff\x1f\x64\x8a\x0e\x7a\xc5\xf0\xe7\x18\x2a\x65\xb0\x99\x27\x61\xdf\x5c\xc7\x1b\x57\x7e\xaf\xe9\x77\x8f\x05\x3a\xbb\x66\xf5\xf0\x4b\x8c\x0e\xc6\xcf\xc8\x41\x8a\x96\x7a\x52\x37\x4a\x11\xa7\x24\xf8\x86\xdc\x86\xf9\x16\x98\xd1\x8d\x83\xee\x2f\x81\x9d\x6d\x9a\xab\x8a\xdb\x7c\x7f\xfb\x41\x08\x47\xa0\xf7\x76\xc4\x9c\x4f\xc8\xad\x49\x1e\x03\x5f\x1a\xb3\x6b\xd0\xd9\x6b\x51\xe8\xd9\x62\xfd\x5a\xea\xe2\xd2\x9b\xf6\xa8\x26\x6b\x99\x81\xa4\xdf\xfa\x53\x40\x53\x82\x08\xd2\x26\x0c\xea\x49\xd9\x05\x81\xdf\x0b\x6f\x83\x4c\x86\x6c\x29\xb9\xdc\x22\x09\xd0\x3e\xc3\x2a\x8a\x35\x5d\xea\x24\xf9\x13\x00\x00\xff\xff\x82\x66\x54\xfc\x71\x04\x00\x00")

func removerRegsDisabledefenderandsecuritycenternotificationsRegBytes() ([]byte, error) {
	return bindataRead(
		_removerRegsDisabledefenderandsecuritycenternotificationsReg,
		"Remover/REGS/DisableDefenderandSecurityCenterNotifications.reg",
	)
}

func removerRegsDisabledefenderandsecuritycenternotificationsReg() (*asset, error) {
	bytes, err := removerRegsDisabledefenderandsecuritycenternotificationsRegBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "Remover/REGS/DisableDefenderandSecurityCenterNotifications.reg", size: 1137, mode: os.FileMode(438), modTime: time.Unix(1704369724, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _removerRegsDisabledevdriveprotectionReg = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x34\xcc\xc1\xaa\x82\x40\x14\x00\xd0\xbd\x5f\x31\xb8\x7f\x0f\xdf\xe2\x6d\x82\x16\x83\x4e\x18\x69\x13\x2a\x49\x34\x21\x36\x73\x8d\x0b\x76\x6f\xcc\x0c\x88\x7f\xdf\x22\x3a\x1f\x70\x7a\x24\xc7\x4b\x10\x0d\x3c\x30\x44\xbf\x0a\xe5\x30\xb2\x17\x67\xf0\x01\x99\xc4\xff\x6f\x96\x25\xc9\xb5\x3c\xa8\xcb\x50\xe9\x5c\x56\x43\x2d\xf3\x72\x7f\x54\xa6\xd5\xbb\xae\x97\x8d\x32\x35\x5a\xcf\x81\xa7\x68\xbe\x59\x01\x13\x90\x03\x6f\x1a\x18\xe7\x9f\x0e\x9f\x20\x4e\x9e\x23\xd8\x88\x4c\xb7\x24\x2d\x30\x8c\xf7\x19\x64\x58\xc9\xb6\x76\x24\x4d\xfa\x05\x94\x6e\xdd\xc2\xde\x6d\xb2\x8f\xbf\x77\x00\x00\x00\xff\xff\xad\x72\x90\x51\x9b\x00\x00\x00")

func removerRegsDisabledevdriveprotectionRegBytes() ([]byte, error) {
	return bindataRead(
		_removerRegsDisabledevdriveprotectionReg,
		"Remover/REGS/DisableDevDriveProtection.reg",
	)
}

func removerRegsDisabledevdriveprotectionReg() (*asset, error) {
	bytes, err := removerRegsDisabledevdriveprotectionRegBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "Remover/REGS/DisableDevDriveProtection.reg", size: 155, mode: os.FileMode(438), modTime: time.Unix(1704369724, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _removerRegsDisablelsaprotectionReg = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\xd0\xcf\x6a\xe3\x30\x10\x06\xf0\xbb\x9f\xc2\xf8\xbe\x4b\xf6\xb0\x97\x85\x1c\x14\xe1\x90\xa5\xca\x1f\xe2\xd0\x10\xaa\x10\x54\x7b\x6c\x86\xca\x9a\xa0\x19\x27\xe8\xed\x0b\x25\xed\xa1\x4e\x3a\xa7\x81\xf9\xf8\x31\x7c\x7b\x0c\x0d\x5d\x39\xdf\x42\x87\x2c\x31\xe5\x65\x83\x42\x31\x7f\x86\xc8\x48\x21\xff\xfb\x7b\x32\xc9\xb2\x97\xc5\x53\x79\x38\x99\xb5\x56\xe6\xb4\x54\x7a\xf1\x7f\x55\xda\x6a\x3d\xdf\xed\xd5\xb6\xb4\x1b\xf2\x58\x23\xb0\x5d\x62\x1d\x89\xa9\x15\x7b\x53\x6d\x95\x58\xa0\x3f\x66\xc5\x76\x08\x8a\x37\x1b\x53\x4c\x9b\x2b\xc5\xe6\xdf\xe4\x36\x0f\xe8\x43\xb5\x2b\x97\x56\x0f\x31\x42\x10\x4d\x41\x22\xf9\x0a\xc4\xde\x56\x6b\xd8\x1d\xb3\x22\x02\x4b\xc4\x5a\x5c\xa0\x90\x7a\x1a\x78\xa4\x17\x70\x81\x98\x28\x00\x86\xda\x0f\x0d\xf0\x0f\xd1\x91\xc6\xae\xff\x96\xfa\x93\x15\x95\x2e\x57\xa4\xce\x67\x9f\x0c\x74\xae\x4e\x6a\x68\x50\x3e\x1a\x48\x63\x72\x37\xc4\xb0\x6e\x5b\xf5\x29\xce\x3c\xd5\x6f\xe3\x98\x61\xa7\x29\xb4\xd8\xcd\xbd\xeb\xee\x7c\xf6\xb0\xbc\xaf\xcb\x8c\x48\xee\xb8\xbd\xa6\xfe\xec\x04\x5f\xd1\xa3\x24\x03\x17\xf0\xc5\xf4\x57\xf6\x1e\x00\x00\xff\xff\xac\x62\x1b\xb3\xf4\x01\x00\x00")

func removerRegsDisablelsaprotectionRegBytes() ([]byte, error) {
	return bindataRead(
		_removerRegsDisablelsaprotectionReg,
		"Remover/REGS/DisableLSAProtection.reg",
	)
}

func removerRegsDisablelsaprotectionReg() (*asset, error) {
	bytes, err := removerRegsDisablelsaprotectionRegBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "Remover/REGS/DisableLSAProtection.reg", size: 500, mode: os.FileMode(438), modTime: time.Unix(1704369724, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _removerRegsDisablemaintenancetaskreportinginsecurityhealthuiReg = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xc4\x55\xcd\x8a\xe2\x40\x10\xbe\xe7\x29\x8a\xdc\x77\xc9\x1e\xf6\xb2\xcb\x1e\xb2\x31\x8b\xb2\x46\x87\xfc\x8c\x0c\x93\x20\x6d\xba\x12\x8b\x89\xdd\xa1\xba\x54\x7c\xfb\x41\x82\xc2\xe0\x45\x46\x86\xf4\xa5\x4f\xf5\xfd\xd5\xd7\xf4\x8a\x8c\xb6\x47\x07\x29\xb6\xe4\x84\x4f\x10\x6b\x12\xcb\xf0\x8c\xec\xc8\x1a\xf8\xf9\x3d\x08\x3c\xef\x37\x68\x72\x6a\xd3\xa1\x03\xc6\xde\xb2\x90\x69\xc1\x36\x20\x5b\x32\xad\x83\x86\xed\x0e\x12\x45\x46\xd0\x28\x53\x23\xe4\xca\xbd\x01\x19\xb8\xa0\x67\x58\xef\x99\xe4\x04\x61\xdf\x7b\xde\xeb\xb7\xe9\xff\xf8\x65\x3d\x5f\x46\xe1\x7c\x9d\x84\xd1\x74\xb6\x88\xcb\x6c\xf9\x2f\x5f\x85\x69\x5c\x26\x54\xb3\x75\xb6\x91\xf2\x66\x7a\x8a\xaa\x93\x6d\x75\x45\x88\x8a\x34\x8d\x17\xf9\xba\xc8\xe2\xb4\xcc\x6c\x23\x47\xc5\x78\x1f\xc0\x23\xf3\x65\x26\x4a\xb0\xf2\xfc\xc9\x10\x8a\xf6\xff\xe8\xa3\x65\xfd\x2b\x18\xce\x8f\x0b\xfe\x67\x1d\x96\x4f\x9d\x92\xc6\xf2\xae\xf2\xfc\x61\x31\xc8\x37\x2c\xc1\xc3\x2c\xc3\x05\xa1\x3e\x90\xb3\x5c\x79\x7e\x31\x4b\x2f\xdb\xfd\x32\x6b\x1f\x49\xcb\xbf\x4a\x04\xf9\x34\x0e\xf9\x04\x0f\x54\x23\x4c\x98\x0e\x38\x92\xff\x14\x3b\x52\x1b\xea\x48\x46\xca\xe0\xdc\xe5\xbd\x83\xc8\x6a\x74\x63\x29\xb0\xac\x5a\xbc\x3e\xce\xf1\x35\x40\x82\xc2\x54\x8f\x94\x47\x4e\x3b\x84\x0c\xf9\xdc\xcd\x71\x14\x14\xbd\x56\x82\x90\x58\x73\xfe\x0b\xee\xd4\xf0\x1e\x00\x00\xff\xff\xa4\x43\xe2\xac\x4a\x06\x00\x00")

func removerRegsDisablemaintenancetaskreportinginsecurityhealthuiRegBytes() ([]byte, error) {
	return bindataRead(
		_removerRegsDisablemaintenancetaskreportinginsecurityhealthuiReg,
		"Remover/REGS/DisableMaintenanceTaskreportinginSecurityHealthUI.reg",
	)
}

func removerRegsDisablemaintenancetaskreportinginsecurityhealthuiReg() (*asset, error) {
	bytes, err := removerRegsDisablemaintenancetaskreportinginsecurityhealthuiRegBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "Remover/REGS/DisableMaintenanceTaskreportinginSecurityHealthUI.reg", size: 1610, mode: os.FileMode(438), modTime: time.Unix(1704369724, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _removerRegsDisablemicrosoftvulnerabiledriverblocklistReg = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x2c\xc8\xd1\x0a\x82\x30\x14\x80\xe1\xfb\x3d\xc5\xf0\x01\xc2\x9b\x6e\x82\x2e\x6c\x0d\x94\xb4\xa0\x85\x21\x2d\xa4\xda\x49\x0e\x8d\x1d\x38\x9b\x49\x6f\x1f\x82\xff\xd5\xc7\x7f\xc5\xe0\x68\x8a\xf2\x0c\x03\xc6\xc4\x3f\xa9\x1d\x26\x62\xd9\x02\x47\xa4\x20\xd7\xab\x3c\x17\xe2\x56\x1e\x74\xd7\xd7\x27\x55\xd4\x7d\x53\xa8\xb2\x3a\x6a\x6b\x3a\x73\xd1\x8d\x55\x23\x33\x84\xa4\x28\x24\x26\x6f\x20\xd9\x85\x56\x55\x33\xdf\x38\xdc\x45\xd6\x8e\x3e\x00\x3f\x9e\x1e\xf6\x8c\x5f\xe0\x9d\xa7\xd7\xc7\x63\x4c\x3a\xcc\x33\xdb\xba\x89\xd8\x6d\xf2\x25\xf1\x0f\x00\x00\xff\xff\x45\x72\xe1\xd0\x97\x00\x00\x00")

func removerRegsDisablemicrosoftvulnerabiledriverblocklistRegBytes() ([]byte, error) {
	return bindataRead(
		_removerRegsDisablemicrosoftvulnerabiledriverblocklistReg,
		"Remover/REGS/DisableMicrosoftVulnerabileDriverBlocklist.reg",
	)
}

func removerRegsDisablemicrosoftvulnerabiledriverblocklistReg() (*asset, error) {
	bytes, err := removerRegsDisablemicrosoftvulnerabiledriverblocklistRegBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "Remover/REGS/DisableMicrosoftVulnerabileDriverBlocklist.reg", size: 151, mode: os.FileMode(438), modTime: time.Unix(1704369724, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _removerRegsDisablesmartscreenReg = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xbc\x54\xdf\x8b\xda\x40\x10\x7e\xcf\x5f\xb1\xec\x7b\x0f\x4b\x29\x5c\x7b\x08\x4d\x73\x11\xa5\x7a\x8a\xb9\x3b\x29\x5d\x91\xd5\x9d\xc4\xa5\xeb\x4e\x98\x5d\x4d\xfd\xef\x4b\x6c\xb4\x69\x13\xab\x5c\xe1\x7c\xf2\x21\xfb\xfd\x98\xf9\xe6\x9b\x69\xab\xb0\x70\x6c\x0a\x99\x76\x9e\xf6\x2c\x56\xda\x23\xb1\x67\x20\xa7\xd1\xb2\xf7\x37\x9d\x4e\x10\xdc\xb1\x7b\xed\xe4\xd2\x00\x4b\x36\x92\x7c\xb2\x22\x00\xcb\x52\x24\x36\xd2\x2b\x42\x87\xa9\x67\xb1\xca\x20\x08\xbe\xf5\xbf\xc4\x5f\x17\xd1\xd3\x74\x1a\x3f\x3c\x2e\x9e\x92\x78\x2a\x92\x71\xef\x71\x16\x4e\x63\x11\x19\xe9\x1c\x38\x31\xc4\x95\x34\x2c\x01\xef\xb5\xcd\x9c\x48\x30\xf5\x85\x24\x10\x27\x2c\x51\xa9\x12\xd1\x96\x08\xac\xaf\xc4\x88\x30\xcf\x23\xb4\x5e\x6a\x0b\x24\x12\x8f\x24\x33\x10\x9b\xe3\xab\x9b\xd3\x3f\x50\x19\x2c\x6e\x0b\xf8\xbe\x5f\xbe\x53\xb7\xcb\x65\x51\xc3\x2e\x65\x8a\xc9\x5a\xbb\xb5\xb6\x59\x4f\x1b\x0f\x34\x0f\x78\x6c\x4b\x77\xea\xf9\x03\xef\xaa\x02\x49\x7d\xec\x54\xbf\x80\x4f\x08\x76\x60\xfd\x78\x07\x44\x5a\x41\xe3\x83\x56\xcb\x4d\x4b\x25\xef\x3c\xe0\xb5\xf9\x55\x9c\xff\x03\x28\x9a\x70\xf3\xe0\x53\x03\xb0\x7d\x7d\xda\xb2\x9e\x36\xc0\xe2\x1f\xb9\x41\x02\x62\xd2\x2a\x76\xcc\x43\xb2\x06\x63\x8e\x52\x86\xe3\x28\x1c\x2e\x46\x61\xd4\x1f\x3c\xc4\xbf\xf7\x79\x71\x5f\x47\xe4\x33\xbe\x39\xa6\x29\xbf\xc0\x31\x41\xa3\x57\x1a\x5c\x0b\x59\xb2\x77\x1e\x36\xa7\xe5\xd5\x18\x9a\x4b\x3c\xd8\xa9\x7d\x31\x84\x1d\x18\xde\x7d\x73\xb5\xc3\x83\x8e\xfd\x48\x5a\x99\x01\x09\x05\xa9\xdc\x1a\x2f\x3e\x13\x16\x0e\x48\x84\xc6\x60\x51\x83\x9f\x07\x7c\x27\xcd\xf6\x6c\x58\x5e\x48\x57\x63\x10\x0d\xd3\x03\x7b\x30\xf9\x6a\xd4\x61\x9e\x0f\xac\xf3\xd2\x98\xf2\x26\x09\x5f\x83\xf9\xaf\x5b\xec\x21\x95\x09\x76\x17\xad\x5f\xd3\x5f\x65\x9f\x00\x0b\xf3\xdc\x5d\x7b\x81\xe7\x5b\xaa\x8f\xce\x9f\x82\x39\x83\x65\x39\x21\xb0\x3e\x2e\xe5\x49\xaf\xb1\x25\xa1\x17\x6b\xe6\x8e\x45\x68\x53\x9d\x6d\x7f\xa9\x64\xd5\xf0\x59\x35\xfd\x17\xdf\x11\xbb\x87\x14\xac\x2a\x1b\xf5\x8f\x00\x9f\xd8\x1a\x8b\x6e\x2f\xae\xb7\xff\x7a\xc2\xbb\x3c\xb4\xfb\x62\x0d\x04\x3c\xf8\x19\x00\x00\xff\xff\x15\x56\xd7\x63\x74\x06\x00\x00")

func removerRegsDisablesmartscreenRegBytes() ([]byte, error) {
	return bindataRead(
		_removerRegsDisablesmartscreenReg,
		"Remover/REGS/DisableSmartScreen.reg",
	)
}

func removerRegsDisablesmartscreenReg() (*asset, error) {
	bytes, err := removerRegsDisablesmartscreenRegBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "Remover/REGS/DisableSmartScreen.reg", size: 1652, mode: os.FileMode(438), modTime: time.Unix(1704369724, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _removerRegsDisablespynettelemetryReg = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x8f\xd1\x4a\xf3\x40\x10\x85\xef\xf3\x14\x4b\x1e\xe0\x27\xbf\xe0\x8d\xe0\xc5\x9a\xa6\x54\x4c\x1b\xc9\x8a\x45\x5c\x29\xdb\xec\xb4\x0c\x6e\x76\xc2\xec\x68\xe8\xdb\x4b\x0d\x7a\x51\xb0\xe2\x5c\x1d\x86\x73\x0e\xe7\x5b\x63\xf4\x34\x26\xd5\xc2\x1e\x93\xf0\x41\x55\x1e\x85\x58\x3d\x02\x27\xa4\xa8\x2e\xff\x15\x45\x96\x3d\x2f\xee\xaa\xa7\x4d\xdd\x94\xba\xde\x2c\x75\xb9\xb8\x5d\x55\xd6\x34\xf3\x87\xb5\x6e\x2b\x7b\x4f\x01\x3b\x84\x64\x97\xd8\x31\x25\xda\x89\xfd\x6a\x9d\xc1\x0e\xa2\x07\xb6\x66\x38\x44\x90\x97\x2c\x9f\x61\x72\xdb\x00\x37\x81\xba\x57\x2d\x73\xe4\x24\x06\x20\xe6\xd7\x7e\x24\xf6\x57\xc5\x74\xff\xb3\xbc\xa6\xce\x05\x03\x22\x18\xf7\xcd\x3b\x30\xa3\x87\xa9\xa5\x85\x81\xf8\xf8\x3e\x09\x15\x59\xfe\xbb\xe1\x6d\xdb\xa3\x18\xd7\x0f\x01\x52\x49\x31\x41\x94\x13\xd7\xc5\xdf\x71\xbf\x95\xd2\x51\xb0\x77\x61\x74\x0c\x47\xe6\xd5\x27\xf3\x24\xce\xac\xfa\x81\xf5\x5c\xe8\x23\x00\x00\xff\xff\x9e\x84\xb2\xdd\xb8\x01\x00\x00")

func removerRegsDisablespynettelemetryRegBytes() ([]byte, error) {
	return bindataRead(
		_removerRegsDisablespynettelemetryReg,
		"Remover/REGS/DisableSpyNetTelemetry.reg",
	)
}

func removerRegsDisablespynettelemetryReg() (*asset, error) {
	bytes, err := removerRegsDisablespynettelemetryRegBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "Remover/REGS/DisableSpyNetTelemetry.reg", size: 440, mode: os.FileMode(438), modTime: time.Unix(1704369724, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _removerRegsDisablesystemmitigationsReg = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb4\x92\x51\x6b\xdb\x30\x10\xc7\xdf\xf5\x29\x84\x1f\xc6\x06\xdd\xd0\x34\xf6\xd2\xd2\x07\xe3\xb9\xa4\xb4\x9a\x43\xd5\x2d\x84\xd9\x04\xc7\xba\x38\x22\x8e\x14\x4e\x97\x64\xf9\xf6\x23\x76\x58\x82\x93\xb0\x97\xd5\x08\x63\xdf\x9d\x7e\x77\xf7\xbf\x1b\x59\x67\xfc\x36\xf0\x17\xa8\x6d\x20\xdc\xf1\xd4\x58\xf2\xc8\x7f\x02\x06\xeb\x1d\xff\xfa\x49\x08\xc6\x7e\x0d\x9e\xd2\xf1\xe4\x39\x4b\xe2\xe7\x89\x8a\x93\xc1\xe3\xf7\x34\xd7\xd9\xc3\xeb\x28\x7e\x49\x73\x65\x2b\xf4\xc1\xcf\x28\x3f\xc0\x94\x25\x5b\x97\x64\xbd\x2b\x58\xf4\x23\x00\x0e\x11\x66\x80\xe0\x2a\x88\xee\xcd\xd6\xa3\xb9\x15\xdd\x23\x19\xbb\xe3\x8f\xee\xe3\x02\xd0\x41\xc3\x8f\x17\xc3\x95\x9c\x63\xfd\x9a\xaa\x3c\x59\x23\x82\xa3\xc4\x3b\x42\xdf\x68\xa0\xfc\xf0\x99\x6b\x08\x6d\xd9\xaa\x74\x65\x0d\x98\x77\xe0\x82\x45\x47\x74\xbc\x36\x96\xb2\x55\x9b\x25\xba\x9f\xc3\xef\x5b\x21\x6e\x7a\x47\x8a\x1b\x29\xfb\xc6\xbf\xae\x8b\x76\x21\x4e\x93\xf4\xf9\x52\xb6\x47\x9c\xbc\x65\x1f\x25\xff\xc9\x7f\x6a\xbb\xd1\xe9\x20\x1b\xa6\xae\x9c\x36\x60\x7a\x7a\x8a\xbd\x9e\xdf\x6c\xd8\xfb\xb8\x5e\x41\x45\x08\xfc\x1d\x57\xd0\x90\xf1\x5b\xf7\x06\x02\x2b\x58\x7a\xdc\x1d\x7e\x97\xe0\xa8\x60\xd1\x03\x94\xb4\x46\xd0\x40\x64\x5d\x1d\x7a\x35\x7e\x3e\x0b\xc8\x36\x80\x68\x4d\x7f\x39\xbe\x5c\x0d\x54\x65\x58\x9c\x05\xb3\x3b\xae\x01\x37\xb6\x82\xf0\x3f\xfa\x4c\x54\xe2\xdd\xcc\xd6\x05\x8b\x3a\xad\xf5\xa6\x9a\xfb\x40\x47\xf4\xd0\x37\xb6\xda\xb5\x23\x7e\x3f\xfd\x70\x61\x8b\xba\xa9\xfd\x09\x00\x00\xff\xff\x5d\xa7\xab\xe7\x62\x03\x00\x00")

func removerRegsDisablesystemmitigationsRegBytes() ([]byte, error) {
	return bindataRead(
		_removerRegsDisablesystemmitigationsReg,
		"Remover/REGS/DisableSystemMitigations.reg",
	)
}

func removerRegsDisablesystemmitigationsReg() (*asset, error) {
	bytes, err := removerRegsDisablesystemmitigationsRegBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "Remover/REGS/DisableSystemMitigations.reg", size: 866, mode: os.FileMode(438), modTime: time.Unix(1704369724, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _removerRegsDisabletamperprotectionReg = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x8e\x41\x4b\xc3\x40\x10\x46\xef\xfb\x2b\x96\x5c\xbc\x88\xec\xc5\x4b\xa5\x87\x10\x37\x54\xda\xd8\x92\x16\x8b\x18\x29\xdb\xec\xa4\x0e\x64\x77\xc2\xec\xd4\xda\x7f\x2f\xa2\xc1\x83\x5e\xfa\xf1\x9d\xdf\x7b\x5b\x8c\x9e\x4e\x49\xd7\x70\xc0\x24\x7c\xd6\xd6\xa3\x10\xeb\x27\xe0\x84\x14\xf5\xed\x8d\x31\x4a\xdd\xe9\x1a\x02\xbd\x83\xbe\x87\x0e\xa2\x07\xbe\x4a\x7a\xe3\xc2\x00\xac\x57\x4c\x02\xad\x20\x45\xa5\x5e\x66\x73\xfb\xbc\x5b\x2c\x8b\x7c\xb1\xab\xf2\x62\xf6\xf0\x68\x9b\xf5\xb2\xdc\x6c\xf3\xda\x36\x15\xb6\x4c\x89\x3a\x69\x46\xe7\x08\x6b\x4a\x70\x72\x64\x48\xaf\x2a\xab\x86\x55\xef\xa4\x23\x0e\x73\xec\xfb\x3d\x4a\x2a\x99\x82\x8d\x07\x8c\x90\x4d\xdf\xe0\x63\x62\xcc\xf5\x7f\x57\xd9\x77\xd0\x6f\xcf\x9a\x8e\xdc\x42\x36\xf5\x27\x62\x3f\x31\x3f\xfb\x52\x14\x6e\x70\x7b\xec\x51\xce\x17\x22\xff\xc0\x3e\x03\x00\x00\xff\xff\x92\x1a\x7d\x5b\x3f\x01\x00\x00")

func removerRegsDisabletamperprotectionRegBytes() ([]byte, error) {
	return bindataRead(
		_removerRegsDisabletamperprotectionReg,
		"Remover/REGS/DisableTamperProtection.reg",
	)
}

func removerRegsDisabletamperprotectionReg() (*asset, error) {
	bytes, err := removerRegsDisabletamperprotectionRegBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "Remover/REGS/DisableTamperProtection.reg", size: 319, mode: os.FileMode(438), modTime: time.Unix(1704369724, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _removerRegsDisableuacReg = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb4\x92\xc1\x6e\xd3\x40\x10\x86\xef\x7e\x8a\x55\x1e\x00\x05\x21\x2e\x54\x1c\x16\xc7\x51\x23\x52\x12\xd5\x49\x2b\x84\x51\xb5\xec\x0e\xce\xa8\xeb\x1d\x6b\x66\x96\x90\xb7\x47\x89\xcd\x05\xe7\x50\x0e\xf5\xf9\x9b\xcf\xff\xff\x6b\x1f\x31\x05\x3a\x8a\xb9\x87\x16\x45\xf9\x64\xaa\x80\x4a\x6c\x1e\x80\x05\x29\x99\xf7\x6f\xe6\xf3\xa2\xb8\x31\x0b\x14\xf7\x23\x82\xd9\xdb\xb2\x28\xbe\xdd\x7e\xae\xbe\x3e\xad\x37\xa5\x5d\x3f\xdd\xd9\xf2\x76\xf5\xa5\x6a\xea\xcd\x72\xf7\x68\xef\xab\xe6\x0e\x3d\x93\xd0\x4f\x6d\x46\x77\x53\x66\x66\x48\x3a\x2a\x9b\x2d\x45\xf4\x08\xd2\xd4\x27\x51\xe8\xbe\x17\xb3\x2a\x9d\xdd\xeb\xbd\x9d\x7d\x0c\x47\xe2\xf0\x61\x3e\x7e\xc5\xac\xa4\x24\x90\x74\xcb\xd4\xf5\xfa\x09\x0e\xee\x17\x12\xdb\xd0\x61\x7a\x21\xbb\x17\xe0\x29\xba\xc4\xa8\x30\x78\xce\xb5\x9d\x12\xef\xe8\x19\xfe\x95\xbe\x2d\x66\x6b\xf2\x2e\x5a\xef\x29\x27\xbd\x20\xc3\xe9\xa5\xc4\x69\x8a\xbf\x34\xc3\xbb\xbf\xad\xf7\x2b\xbb\x00\x79\x56\xea\x77\xd4\xb6\x11\xa6\x59\x1f\x5c\xc4\xe0\x14\x2e\x69\x4b\x0a\x50\x63\x9b\x9c\x66\x06\x99\xc2\x83\x74\x95\x44\x5d\x8c\xc0\x0b\x50\xf0\x8a\x74\x65\xad\x81\xac\xc1\x67\x3e\x87\xd8\x3a\x3d\x5c\xf1\x2d\x20\xba\x13\x84\x31\x62\x7d\x44\xf5\x87\x1d\x76\xd0\x51\xd6\x29\x3d\xd4\xde\xa4\xc1\x3a\x1e\x4d\xb1\xff\xdb\xb4\xb8\x31\x4b\xfc\x6d\x3a\xca\x02\xc6\x67\x16\x62\x13\x50\xc4\xf5\x80\x8c\xa9\x7d\xad\xf7\x58\x5e\x7e\x55\xe7\xbe\x67\x10\xb9\xb6\xe1\x9f\x00\x00\x00\xff\xff\x02\x63\x82\x41\x3d\x03\x00\x00")

func removerRegsDisableuacRegBytes() ([]byte, error) {
	return bindataRead(
		_removerRegsDisableuacReg,
		"Remover/REGS/DisableUAC.reg",
	)
}

func removerRegsDisableuacReg() (*asset, error) {
	bytes, err := removerRegsDisableuacRegBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "Remover/REGS/DisableUAC.reg", size: 829, mode: os.FileMode(438), modTime: time.Unix(1704369724, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _removerRegsDisablevbsReg = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xbc\x55\x41\x4f\xdb\x4c\x10\xbd\xfb\x57\x58\xbe\xf3\x29\x5f\xa5\x5e\x5a\x71\x70\x36\x4e\x63\x35\x2e\x28\x4e\x89\x10\x46\x68\xf1\x8e\x9d\x55\x37\x3b\x74\x76\x36\xd4\xfd\xf5\x55\x82\x41\x25\x89\x09\x14\x88\x4f\x96\xfc\x66\xe6\xbd\x99\x79\xe3\x99\xb6\x0a\x6f\x5d\x38\x81\x5a\x3b\xa6\x26\x4c\x94\x66\xa4\xf0\x0c\xc8\x69\xb4\xe1\xc7\xff\x7a\xbd\x20\xf8\x1c\x4e\xc0\x01\x87\x4b\x69\x3c\xb8\xb0\x5a\x01\x34\xb1\x97\x46\xff\x96\xbc\xc2\xe5\xc0\xac\x6d\xed\x82\xe0\xe2\x68\xf4\x35\x39\xbf\x1a\x9f\x88\x78\x7c\x95\xc5\x62\x94\x7e\x4b\x8a\xfc\x3c\x9f\x26\x59\x21\x3c\x11\x58\x16\x68\x99\xd0\xe4\xc0\x45\xfb\x5a\x0c\x60\xa9\x4b\xf8\xe2\x25\xa9\xcb\xae\x1c\x27\xc3\xe9\x2c\x9e\x24\x45\xa6\x4b\x42\x87\x15\x17\xa7\x68\x74\xd9\x64\xd2\xca\x1a\xa8\x50\x50\x49\x6f\xf8\x4d\x73\x3d\x96\xd9\x97\x0e\xd4\x14\xca\xb9\x45\x83\x75\x73\xb9\xea\xcc\x40\x3b\x79\x6d\x60\xb3\x21\x6b\x68\x98\x43\xe9\x49\x73\x13\x04\x17\xaf\xee\x4a\x94\xd8\x55\xa1\x1d\x8c\xee\xab\x44\xc7\xea\x16\x49\x7d\xea\xb5\x4f\x10\x8d\x9a\x1b\xa0\xa5\x76\x48\x89\xad\x90\x4a\x50\x02\x15\xa4\x96\xa1\xee\x08\x38\x13\x69\x16\x4f\x27\xf0\xd3\x6b\x02\xb5\x0d\x18\x3b\x29\xaa\x7a\x68\x64\xed\xb6\x3f\x0a\xb4\x95\xae\x3d\x41\xde\x38\x86\xc5\x9a\xf8\x58\x7a\x5b\xce\x37\xb0\x1f\x82\xa8\x2d\x71\x6a\x24\x57\x48\x8b\x7b\x0d\x43\x90\xec\x09\x76\xe4\x96\xe5\x1c\xd4\x80\x78\x11\x7b\x9e\xa7\x56\xc1\xaf\x6d\x50\x9b\xf4\x61\xaa\xb9\xae\x2d\xa8\x3e\x22\x8b\xb9\xd4\x76\x23\xe0\xff\x20\x1a\x63\xf9\x63\x97\xcc\xa7\xd9\x6d\x4b\x7f\xf5\x7c\x8b\xbc\x04\x2b\x49\xa3\x2b\xf6\x0c\xed\x61\x13\x76\x4d\xa7\x43\xce\x4c\xba\x36\xa6\xdf\x44\xc7\x47\x1d\x74\xdf\xc4\x14\xcf\xa0\xbf\x3e\x23\xcf\x6c\xe1\x3f\x98\xbe\xd8\x6b\x94\x03\x70\xe8\xb6\xc2\x01\x8a\xff\x65\xd2\x03\x54\xdb\xe3\x95\x77\x62\xf0\xf4\x12\xb6\x9c\xbe\x27\xc3\x34\x83\x05\x52\x13\x33\x93\xbe\xf6\x0c\x6e\xba\x5a\x8e\x17\x92\x7a\xd9\xa1\x1e\xc0\x8d\xc1\xe6\x6e\x03\x44\x7a\x47\xff\x5d\x2f\x86\x20\x50\x60\x59\x4b\xf3\xf8\x5f\xb1\x7d\x09\xfe\x04\x00\x00\xff\xff\x99\xc8\x8f\x4e\xf0\x07\x00\x00")

func removerRegsDisablevbsRegBytes() ([]byte, error) {
	return bindataRead(
		_removerRegsDisablevbsReg,
		"Remover/REGS/DisableVBS.reg",
	)
}

func removerRegsDisablevbsReg() (*asset, error) {
	bytes, err := removerRegsDisablevbsRegBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "Remover/REGS/DisableVBS.reg", size: 2032, mode: os.FileMode(438), modTime: time.Unix(1704369724, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _removerRegsExploitguard_dReg = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xd4\x92\xcd\x6a\x02\x31\x14\x85\xf7\x3e\x45\x98\x7d\xcb\x6c\xba\x29\xb8\x08\xd3\xf1\x87\xfa\x47\x46\x2a\xa5\x23\x43\x4c\xae\x12\x8c\xb9\xc3\xcd\xb5\xea\xdb\x17\x1d\x5b\x17\x6e\x4a\x61\x16\xcd\xf2\x7c\x21\x7c\x87\x93\x85\x0b\x16\x0f\x51\x28\xd8\xb8\xc8\x74\x12\xb9\x75\x8c\x24\xde\x80\xa2\xc3\x20\x9e\x1e\xd3\xb4\xd3\xf9\x18\xbc\xe6\xef\xd5\x68\x9a\xc9\x51\x35\x96\xd9\x60\x38\xc9\xcb\x62\xda\x9b\x2f\xa4\xca\xcb\x19\x7a\x67\x1c\xc4\x72\xec\x0c\x61\xc4\x35\x97\xdf\xaf\xbe\xc0\x1a\x82\x05\xba\x0b\x44\x7e\xac\x3d\x3a\x16\xfd\xbd\x26\x5b\x66\x18\x98\xd0\x7b\xb0\xa2\x87\xfe\xcc\xa5\x31\x10\xe3\xb2\x93\xe4\x41\xaf\x3c\xdc\x2e\x34\xbc\xc1\x49\xd7\x1e\x90\xec\x73\x7a\x3d\xed\x8b\x4e\x80\x0f\x48\x5b\x31\x23\x64\x30\xec\x30\xfc\x28\x5e\xd1\x8d\x24\xdd\x87\xd6\x85\x96\xed\x57\x96\x85\x3a\x77\x6c\xb2\x4b\x54\xc9\x42\x55\x6a\xef\xe1\xdf\x0f\x70\xf3\x50\xb0\xc3\x4f\xed\xe7\x88\x3e\x96\xe3\xba\x0f\x9a\xce\xbf\x6f\x00\x9a\x78\x05\x9a\xe7\xa4\xcd\xd6\x85\xcd\x30\x58\x38\xde\xd5\x4e\x8a\xfa\x34\x01\x56\x50\x23\xb1\x0b\x9b\x11\x1a\xdd\x18\x24\x69\xf2\x6b\x87\x3f\x2e\x73\x29\x2f\x0b\x95\x61\x88\xfb\x1d\xd0\xfd\x2a\x5f\x01\x00\x00\xff\xff\x97\xcf\xb3\xa9\xe5\x03\x00\x00")

func removerRegsExploitguard_dRegBytes() ([]byte, error) {
	return bindataRead(
		_removerRegsExploitguard_dReg,
		"Remover/REGS/ExploitGuard_d.reg",
	)
}

func removerRegsExploitguard_dReg() (*asset, error) {
	bytes, err := removerRegsExploitguard_dRegBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "Remover/REGS/ExploitGuard_d.reg", size: 997, mode: os.FileMode(438), modTime: time.Unix(1704369724, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _removerRegsMitigationoffaulttorelantheapReg = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x0a\xcf\xcc\x4b\xc9\x2f\x2f\x56\x08\x4a\x4d\xcf\x2c\x2e\x29\xaa\x54\x70\x4d\xc9\x2c\xc9\x2f\x52\x08\x4b\x2d\x2a\xce\xcc\xcf\x53\x30\xd5\x33\x30\xe0\xe2\x8a\xf6\xf0\x76\x8d\x8c\xf7\xf1\x77\x76\xf4\x89\xf7\x75\x74\xf6\xf0\xf4\x73\x8d\x09\xf6\x77\x0b\x09\x77\x0c\x72\x8d\xf1\xcd\x4c\x2e\xca\x2f\xce\x4f\x2b\x89\x71\x0b\xf1\x88\xe5\x52\x72\xcd\x4b\x4c\xca\x49\x4d\x51\xb2\x4d\x29\xcf\x2f\x4a\xb1\x32\x80\x02\x40\x00\x00\x00\xff\xff\x70\x01\xe5\xe9\x6a\x00\x00\x00")

func removerRegsMitigationoffaulttorelantheapRegBytes() ([]byte, error) {
	return bindataRead(
		_removerRegsMitigationoffaulttorelantheapReg,
		"Remover/REGS/MitigationofFaultTorelantHeap.reg",
	)
}

func removerRegsMitigationoffaulttorelantheapReg() (*asset, error) {
	bytes, err := removerRegsMitigationoffaulttorelantheapRegBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "Remover/REGS/MitigationofFaultTorelantHeap.reg", size: 106, mode: os.FileMode(438), modTime: time.Unix(1704369724, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _removerRegsNomoredelayandtimeoutsReg = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xd4\x94\x41\x6f\x9b\x40\x10\x85\xef\xfc\x0a\xb4\x3f\xa0\x22\x55\xab\x4a\x95\x72\xa0\x36\x16\x55\xb0\x8d\x80\xc4\x8a\x0a\xb2\xd6\xec\xc4\x1e\x79\xbd\x83\x76\x07\xa8\xff\x7d\xd5\x04\x3b\xad\x5d\x27\xad\xda\x4b\xf7\xc8\xc0\xfb\xde\x7b\x0c\x2c\xd0\x28\xea\x9d\x9f\xc1\x1a\x1d\xdb\xbd\x1f\x29\x64\xb2\xfe\x1d\x58\x87\x64\xfc\xf7\x6f\x82\xc0\xf3\xbe\xc4\x37\xd1\xfd\x32\x99\x8f\xc2\x64\x39\x0d\x47\xf1\xe7\x59\x54\xe6\xf3\x49\xb1\x08\xb3\xa8\x9c\x62\x6d\xc9\xd1\x03\x97\x83\x58\x39\x6a\xad\x05\xc3\x83\x46\x99\x92\xc6\x1a\xc1\x95\xf9\xde\x31\xec\x2a\x4f\xdc\x81\x5d\x91\x83\x9c\x25\xb7\x4e\x5c\xab\x9e\xac\xfa\x18\x0c\xe7\x6f\x71\x19\x68\x94\x2b\xd4\xc8\xfb\xca\x13\xf9\xa6\x65\x45\xbd\xc9\x40\x3a\x32\x73\xf3\x9b\x34\x7a\xe0\x5e\x5a\x78\xf6\x7e\x86\xf5\x67\xc5\xbf\x41\x5d\x0c\xf6\x9d\x70\x92\x6d\x98\xfc\x00\x5b\x48\x6b\xd0\xac\xc7\x28\x35\xad\x0b\xdc\x01\xb5\x7c\x02\xbe\x3a\x80\x47\xb7\x59\x16\xcd\x8a\xe5\x6d\x1e\x65\xe5\x88\x0c\x5b\xd2\x7e\x2a\x0d\xe8\x72\x0c\x6e\xcb\xd4\x54\x9e\x08\x5b\xa6\xc8\xa8\x42\xba\xad\x13\xd7\xe2\x4a\x78\x62\x0a\xa6\xcd\x37\xd4\x8f\x41\xcb\xfd\x70\x6d\x42\x16\xd6\x96\x5a\xa3\x12\xaa\xb7\xbf\x06\x07\x9e\x58\x48\xe4\x82\x6e\x50\xeb\xb0\x69\x8e\x77\x3d\x2a\x3c\x8f\x72\xb0\x1d\xd6\x70\xc9\xbd\x88\x5b\xb3\xfe\xf9\xf1\x20\x08\x84\x27\x12\xea\x13\xe8\x40\xc7\x44\x5b\xf7\x4a\xf6\x93\xd2\xef\xf3\x22\x9a\x1e\xda\x1d\xaa\xc8\x81\x0f\xad\x54\x2f\xd9\x7b\x74\x3f\x46\x27\x57\x1a\x32\xd8\x11\x43\x5e\xef\x22\xa3\x1a\x42\xc3\x4e\x9c\x56\x10\x4b\xa3\x34\xd8\x13\x7f\x1f\x26\x4f\xc7\x13\x83\xbc\x4b\xb1\x39\xaf\xe0\xed\xbb\x17\x36\x67\x08\x71\x74\x1f\x04\x57\xff\x65\x80\x4b\x6f\xa1\x4c\x4d\x5a\x79\x22\x25\xad\x3f\x11\x71\x2a\x2d\x23\x23\x99\x3f\x59\xf3\xe3\x97\xfc\xea\x7f\x23\xfa\xda\x68\xb2\x60\xcb\x50\x75\xd2\xd4\xa0\x2a\x4f\x14\x9b\x76\xb7\x32\x12\x75\x82\x1d\xa4\x16\x3a\x84\x3e\xa6\xee\xa9\x8c\x33\xfe\xb7\x00\x00\x00\xff\xff\x3a\xb6\x00\x66\x4d\x05\x00\x00")

func removerRegsNomoredelayandtimeoutsRegBytes() ([]byte, error) {
	return bindataRead(
		_removerRegsNomoredelayandtimeoutsReg,
		"Remover/REGS/NomoreDelayandTimeouts.reg",
	)
}

func removerRegsNomoredelayandtimeoutsReg() (*asset, error) {
	bytes, err := removerRegsNomoredelayandtimeoutsRegBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "Remover/REGS/NomoreDelayandTimeouts.reg", size: 1357, mode: os.FileMode(438), modTime: time.Unix(1704369724, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _removerRegsRemovalofantiPhishingservicesReg = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x94\x4d\xaf\x9a\x40\x14\x86\xf7\xfc\x0a\xc2\xfe\x36\x6e\xba\x69\x73\x17\x04\xb9\xb1\xa9\xa8\x01\x5a\x62\x3a\xc4\x8c\xcc\x41\x27\xc1\x39\xcd\x39\x33\x18\xff\x7d\x03\xc5\x45\xdb\xf8\x59\xdb\x95\xec\xe7\x79\x79\x3f\x72\x0a\x6d\x14\xee\xd9\x4f\x61\xa3\xd9\xd2\xc1\x8f\x95\xb6\x48\xfe\x57\x20\xd6\x68\xfc\xf7\xef\x46\x23\xcf\xfb\xf6\x32\xf9\x1c\x2f\x57\xd3\x79\x14\x4e\x57\x49\x18\x4d\x3e\xcd\x62\x91\xcd\xdf\xf2\x22\x4c\x63\x91\xe8\x8a\x90\xb1\xb6\x62\xa0\xa5\xce\x58\xbd\x03\x91\x01\xb5\x40\xa2\x80\x75\xbe\x25\x90\x76\x0c\x75\xd6\x56\xe5\x29\xde\x32\xcb\xe3\x44\x44\x8e\x08\x8c\x8d\xd0\x58\xc2\x26\x03\xdb\x63\x74\x05\x2c\xf6\xb0\xb6\x3d\x48\x41\xcd\x8f\x02\x39\x06\x3a\x07\x3b\xe9\xd2\x9f\xe5\x47\x8d\x21\x2d\x91\xb5\xd5\x16\xd9\xfe\xe2\x18\x0c\x43\x07\x7f\x10\xbb\xf4\x82\xdf\xe9\xc1\xeb\x8b\xe7\x7d\xf4\xdf\x08\x77\xfe\x58\xb3\x5c\x37\x40\xd7\xbb\x59\x60\xa3\xab\x43\x22\x8d\xdc\x00\x09\x05\xb5\x74\xcd\xdf\x38\xb8\x8e\x27\x42\xa7\xb4\x4d\x50\x41\xe9\x05\xad\x6c\x1c\x04\xaf\x6a\x8f\xa4\x3e\x8c\x86\xef\xd1\x82\x33\xb4\xba\x3e\x7c\x31\x2c\x6b\x98\x53\x0a\x8e\x41\x2d\x24\x73\x27\xfa\xbf\xfe\x61\x18\x60\x6c\xba\x8e\xce\xa9\x9e\xed\xae\x17\xd3\xc0\x7f\xce\x46\x14\xf9\x38\xbb\x54\xd5\x85\xe7\x22\xc2\xdd\x77\x34\x60\x2c\x97\x5e\xf0\x33\xb5\x63\x4e\x7d\x6a\x37\x86\x74\x87\x5c\x22\xbb\x27\xe8\xf8\x5f\xf7\xf1\x1c\xe1\xcd\x23\x7c\x1e\xe9\xfb\x8f\xf4\x8f\x00\x00\x00\xff\xff\x2f\xc2\x5c\x17\x6d\x07\x00\x00")

func removerRegsRemovalofantiPhishingservicesRegBytes() ([]byte, error) {
	return bindataRead(
		_removerRegsRemovalofantiPhishingservicesReg,
		"Remover/REGS/RemovalofAnti-PhishingServices.reg",
	)
}

func removerRegsRemovalofantiPhishingservicesReg() (*asset, error) {
	bytes, err := removerRegsRemovalofantiPhishingservicesRegBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "Remover/REGS/RemovalofAnti-PhishingServices.reg", size: 1901, mode: os.FileMode(438), modTime: time.Unix(1704369724, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _removerRegsRemovalofsechealthuiReg = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xd4\x93\xd1\x6f\xd3\x30\x10\xc6\xdf\xf7\x57\xf4\x65\x8f\x89\x9c\x66\x6e\x1b\xde\x52\x37\xd1\x2a\xda\x75\x4a\x3a\x06\xc2\x53\xe5\x3a\xd7\xc4\x2c\x8d\x3d\xdb\x23\xb1\x10\xff\x3b\x0a\xeb\x18\x42\xda\x34\x84\x36\xe0\x31\xd1\x7d\xf7\xfd\x7c\x77\xdf\xa5\x68\x0a\xd9\x9a\x41\x06\xa5\x30\x56\xbb\x41\x52\x08\x2b\xf5\xe0\x1d\x68\x23\x64\x33\xc0\x3e\x42\x47\x47\x1f\xbd\xd3\xb7\xc9\x87\x0d\x59\xc4\x79\x9e\xe4\x9b\x6c\xb5\x5a\x53\xb2\xc8\xe7\x33\xfa\x25\x89\x4e\x22\x3c\x9d\x8c\xbd\x59\x84\x91\x77\xc2\xb6\xd8\x9b\x8c\x63\xec\xa5\xe9\x68\x36\x46\xd3\x34\x4c\x22\xf4\xf5\xea\xc9\x16\xe9\x30\x40\x43\x12\x8e\xbd\x08\x91\xd0\x3b\xc1\x88\x78\xd3\x30\x1d\x79\xd1\x70\x9a\x04\xa3\x28\x9c\xce\xd2\xe1\x63\x2d\x62\xa5\xde\x07\xc6\x8d\x75\xab\xf9\x10\x95\xe5\x4d\x34\x66\xa3\x2e\xd8\x97\xfb\x4f\xcc\x22\x6d\x2b\x87\x83\x27\xa4\x5b\xec\xba\xcf\x93\x51\x73\x5d\x29\x1c\x22\x87\x1c\x46\xae\x83\x51\xc4\x83\x9b\x96\x15\x41\xf7\x88\x74\x21\x39\xab\x07\x39\x58\x2b\x9a\xd2\xd0\x5c\xee\x6c\xcb\x34\xd0\xa5\xe0\x5a\x1a\xb9\xb3\xf4\x30\x57\x4a\x6e\xb5\x86\xc6\x1e\xc6\xd9\x7b\x12\xd9\x58\x26\x1a\xd0\x34\xb7\x52\xb3\x12\xe8\xfe\x5e\xe5\x1b\xe0\x15\xb0\xda\x56\xb7\x62\x33\x69\xe1\xda\x6d\xc3\x62\xb2\xdd\xb6\xf0\x02\x1c\x4b\x59\x40\x4d\xcf\x19\xbf\x66\x25\x64\xa0\xa4\xe9\x17\xef\x68\xd2\x59\x68\xfa\x22\x43\xcf\xb5\x2c\xe7\x33\xf3\x27\x43\x7e\x45\xc2\xbf\xb0\xcb\x67\x10\xb6\x77\x62\x7f\x27\x6a\x58\x3b\x05\xb1\x31\x92\x0b\x66\xfb\x0e\x3e\xab\xeb\xff\x00\x5d\x69\x69\x25\x97\xf5\xfd\x8f\x02\x76\xd0\x14\xa0\x9f\x75\x17\xc5\xcb\xb1\xcb\x5a\x70\x47\x18\xaf\x7e\x52\xf9\x39\xf0\xd3\xef\x11\xba\x98\xbf\x52\x84\x72\x67\x2c\xec\x63\xa5\x66\xcc\xb2\xdf\x24\xb9\xc8\xb2\xe4\x6c\xbd\xb9\xc8\x93\xec\xc1\x9a\xd4\xcc\x18\x30\xbf\xa2\x2d\xb5\xbd\x7b\x2c\x79\x73\x8c\xc9\x81\xea\x18\x93\x1f\xfe\xfd\xc7\x83\xfd\xa1\xc0\x8f\x95\xca\x40\xf9\xa4\xea\x62\xa5\x36\xbc\xc5\x4d\x50\x0d\x6d\xe7\xa0\x75\xc7\x98\x68\x30\xf2\x56\x73\xe8\xb7\x2c\x1e\xc0\x16\x2b\x12\x2f\x36\xcb\x98\x9c\xce\xcf\x12\x9a\xaf\xd2\xf5\x65\x9c\x25\x8f\x91\xbd\xf6\xe1\xfd\x9b\x71\xb8\x3a\xfa\x16\x00\x00\xff\xff\x38\x20\xb9\xdc\x4d\x07\x00\x00")

func removerRegsRemovalofsechealthuiRegBytes() ([]byte, error) {
	return bindataRead(
		_removerRegsRemovalofsechealthuiReg,
		"Remover/REGS/RemovalofSecHealthUI.reg",
	)
}

func removerRegsRemovalofsechealthuiReg() (*asset, error) {
	bytes, err := removerRegsRemovalofsechealthuiRegBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "Remover/REGS/RemovalofSecHealthUI.reg", size: 1869, mode: os.FileMode(438), modTime: time.Unix(1704369724, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _removerRegsRemovalofwindowsdefenderantivirusReg = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb4\x96\xcf\x6a\xdc\x3c\x14\x47\xf7\x79\x8a\x79\x81\xfb\xa1\x3f\x57\x92\x2f\xdf\x4a\xbe\x92\x48\xe8\x24\x03\x99\xd0\x21\xd4\x25\x8c\x63\x25\x0c\x84\x71\xf1\x38\x84\x52\xfa\xee\x25\x6d\xba\x0c\xae\x63\x7b\xe7\xd5\xf9\x61\x9b\x73\xa4\xdd\xe1\xd8\xb4\x2f\xa7\xd5\x75\x7e\x3c\x9c\xfa\xee\xfb\x2a\x36\x87\xbe\xed\x56\x9f\x73\x77\x3a\xb4\xc7\x95\xf9\x4f\x88\xb3\xb3\x2f\x70\xfe\x29\xde\xde\xad\x37\xec\xd7\x77\x97\x9e\xcf\x2f\xae\x62\xb5\x6d\x1f\xfa\x97\x7d\x97\x2b\x7e\xda\x9f\x4e\xf9\x54\xed\x36\x3b\x8b\x5a\x5d\xb5\x4d\xae\x78\xbd\xbd\x08\xd5\x0f\xe5\x0a\xe9\xac\x8c\xa0\x8a\x28\x00\xa5\x20\x20\x4a\x11\x4a\x0a\x52\x39\x36\xce\xa7\xf8\xf3\xeb\x4c\x03\x6a\x89\x01\x49\xa6\xc4\x20\x1c\xe8\xf0\x3a\xe0\x10\xa1\x2c\x93\x82\x40\x42\x2a\xe9\xa3\x2b\x4c\x39\x69\x40\x5b\xa9\x48\xdc\x0b\xb8\xaf\x65\x0d\x48\xfb\x0c\xf4\xa0\x33\xd4\x7b\x79\x5f\x67\xd3\xec\x6b\x6d\x26\x0d\xa0\x49\x8a\xb5\x4a\x10\x83\xb4\x80\x4c\x08\x05\x92\x86\xe0\x54\x4c\xa4\xbd\x30\x72\xda\x1b\x58\x8e\x41\x04\xef\x01\x39\x44\x40\x62\x82\xd2\x6b\x0f\x3e\x4a\xab\x03\xeb\xe0\x7c\x9a\x34\x50\xec\x2d\xd9\x46\x2a\x30\xce\xd6\x80\x4a\x65\x20\x27\x15\x08\x59\x53\xd3\x14\x58\x23\xda\x69\x03\x4c\x2c\x42\xe9\x40\x71\xe9\x01\x45\x92\xe0\x53\x14\xc0\xc6\x38\x14\x21\x90\xf4\x62\xd2\x80\x57\xc1\x99\xc2\x21\x58\x67\x04\x20\x69\x09\x84\x2c\x81\x89\x82\x2e\x99\x82\x60\x37\x6d\xc0\x31\x1a\x15\x13\x14\x91\x12\xa0\x8a\x25\x50\x52\x25\x28\x34\x56\x6a\xf6\x22\x30\x4d\x1a\x08\x9e\xbd\x30\x36\x82\x92\xd6\x03\xa6\x20\xa1\x40\x6f\x81\xb5\xb0\x5e\x48\x17\x39\xf2\xa4\x81\xa8\x99\xa4\xb5\x01\x64\xd0\x04\x18\x30\x82\x47\x13\xa0\x64\x57\x46\x2a\x85\x30\xae\x98\x34\x90\x2c\x39\xcb\xc9\x80\x2d\x7c\x01\xa8\x2d\x03\x39\xf3\xfa\xbb\xcb\x68\xb4\x95\x36\x98\x11\x9f\x68\x91\xc0\x2d\x12\xb5\x45\x42\xb6\x48\xbc\x16\x09\xd6\x22\x91\x5a\x24\x4c\x8b\xc4\x68\x91\x00\x2d\x12\x9d\x45\x42\xb3\x48\x5c\x3e\x16\x14\x5e\xfb\xed\x36\x6e\xef\xae\x37\x9b\x9b\x19\xee\x4a\x63\x70\xff\x10\x91\x21\xdc\xc8\x7c\x0c\xe1\x46\x86\x63\x08\x37\x32\x19\x43\xb8\x91\xb1\x18\xc2\x8d\xcc\xc4\x20\x6e\x5c\x20\x86\x70\x23\xd3\x30\x88\x1b\x17\x85\x21\xdc\xc8\x1c\x0c\xe1\x46\x86\x60\x08\x37\x25\x01\x33\x68\x3f\x83\xea\x33\xe8\x3d\x83\xd2\x33\x68\x3c\x83\xba\x33\xe8\x3a\x83\xa2\x33\x68\x39\x83\x8a\x33\xe8\x37\x83\x72\x23\x35\xfb\x7f\x15\xf2\x43\x3e\x36\xb9\x5b\xad\xdb\xc7\xc7\xdc\x9d\xde\x3b\xd2\x6f\xb7\x37\xf1\xb2\xe2\xe7\xae\xcb\xc7\x9e\xdb\x63\xdf\xb5\x4f\xdb\xdc\x57\x6f\x8f\xd5\xee\xf2\xa2\xf2\xcf\x7d\xfb\xf4\x1b\x53\xfd\xc5\xfa\xe7\xe6\xd0\xff\x41\xbf\x7b\x5b\xf8\x28\xfa\xdb\xe1\x0d\xfc\x2b\x00\x00\xff\xff\xda\xbf\xa4\x3b\x94\x11\x00\x00")

func removerRegsRemovalofwindowsdefenderantivirusRegBytes() ([]byte, error) {
	return bindataRead(
		_removerRegsRemovalofwindowsdefenderantivirusReg,
		"Remover/REGS/RemovalofWindowsDefenderAntivirus.reg",
	)
}

func removerRegsRemovalofwindowsdefenderantivirusReg() (*asset, error) {
	bytes, err := removerRegsRemovalofwindowsdefenderantivirusRegBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "Remover/REGS/RemovalofWindowsDefenderAntivirus.reg", size: 4500, mode: os.FileMode(438), modTime: time.Unix(1704369724, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _removerRegsRemovalofwindowssecurityactioncenterReg = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xd4\x97\x5b\x6f\xab\x46\x14\x85\xdf\xf3\x2b\xd0\xe9\x6b\x27\x62\x60\x18\xa0\x55\xa5\x8e\xb9\xe8\x58\xf5\xad\x26\xa9\x5b\x75\xa2\x68\x80\x4d\x82\x82\x19\x0a\xe3\x38\x56\xd5\xff\x5e\xc5\x97\xc4\xc9\x71\x1a\x93\x90\x48\x7d\xb5\xc5\xb7\xd6\x5e\x7b\xf6\x5c\x66\x79\x99\xca\x65\xa3\x4d\xe1\x2a\x6f\x54\xbd\xd2\x82\x34\x57\xb2\xd6\x7e\x83\xba\xc9\x65\xa9\x59\xa7\xba\x7e\x72\xf2\x27\xfa\xfa\x4b\xf0\xc7\xa5\x37\x60\x51\x14\x44\x97\xd3\xf1\xf8\x8c\x7b\x83\xa8\xef\xf3\xbf\x75\x2b\x34\x2d\x8a\x7d\xa4\x9b\x96\x83\x08\x75\x6c\xe4\x30\xcf\x47\xcc\x24\xbe\x41\x3c\xe2\x38\x7e\xf8\xcf\xc5\x03\x62\x30\xf6\xd8\xe0\x72\xc8\xbc\xaf\xfd\x51\xc0\xa3\x71\x78\x36\x63\xd3\x80\x7b\x85\x68\x1a\x68\xde\x08\x7d\xe2\x6b\x36\x9e\x51\x62\x1a\x23\x99\xc2\xc7\x78\xfc\x70\x01\x56\x55\xe7\x0d\xd4\x43\x99\x42\xd1\x4f\xf9\xb6\x45\xa7\x3e\x64\x50\xa6\x50\x9f\x46\x90\x2c\xea\x5c\xad\x3c\x28\x15\xd4\x7b\x31\x9c\x4f\xa7\xc1\xe8\xec\xf2\x3c\x0a\xa6\x3c\x92\x99\x5a\x8a\x1a\xf8\x30\x4f\x6a\xd9\xc8\x4c\xed\x40\xdc\x5b\xd4\x35\x94\x6a\xdb\x62\x3e\x59\x34\xd7\x23\xa9\xf2\x2c\x4f\x84\xca\x65\xd9\xf0\x9e\x48\x6e\x16\x55\x0b\xe1\xfd\xfc\x5f\x70\x1f\xad\x1a\x05\xf3\x33\x29\x1a\xf5\xc0\x61\x65\x3a\x14\x79\xa9\xa0\x14\x65\x02\xaf\xe6\xf3\x4d\x25\xd3\x45\xa9\xf2\x39\x70\x96\xa8\xfc\x56\x28\x11\x17\xb0\xce\x70\x5f\xf6\x89\xe5\x47\xe5\xaa\xea\xd5\xf2\x66\xbf\x88\x8f\x13\x9d\x35\xc9\x46\x6c\x28\x4a\x71\xf5\x69\x9a\x5e\x21\x17\xe9\xa6\x95\x93\x5a\xde\xe6\xe9\xa7\x29\xfb\x42\x89\x49\x2d\x15\x24\xf7\xeb\xa9\x85\xe8\x0e\xa5\x6d\x58\x7c\xe7\x9b\xb3\xdb\x2e\x28\x7b\xdd\xbf\xc7\xb5\x0a\xe2\xf9\xd4\x3c\x9d\x98\x5f\x17\x39\xa8\xaf\x72\x51\x37\x9c\x15\x4b\xb1\x6a\x58\x51\xc8\x25\xa4\xac\xaa\x9a\x8b\x93\x2f\x5b\xc6\x4e\xff\xcb\x4f\xe8\xf1\xb7\xc7\xb9\xd8\xff\x7b\xeb\xee\xf0\x48\xef\x36\x8a\x81\x4c\x44\xa1\x45\xa0\x54\x5e\x5e\x35\xbc\x3f\x9f\x2f\xd6\x1d\x1a\x2e\x72\x4f\x24\xd7\xc0\x23\x55\xaf\xff\xb1\x0c\x8f\x92\x9e\x1d\x5c\x9c\x7c\xf9\xd9\xfb\x81\xcf\xfa\x23\x7f\x3c\x8b\xf8\x46\xdb\x34\xd6\xdd\x95\xe5\x26\x2e\x6f\x32\x38\x4d\x8b\xe2\x7b\x84\xbf\xcb\x77\x40\xbc\x76\x7c\xfc\xa7\xc6\xb3\x4f\xdf\x52\xcd\x43\x11\xf4\x89\xfd\xc3\x56\x37\x22\xad\x8e\x18\x2c\xb2\x04\x5b\x14\x65\x06\xc4\x88\x24\x38\x41\xc2\x36\x0c\xe4\x58\x96\x4e\xb0\x9d\x9a\x2e\xcd\x5a\x9f\x5b\xc2\x8c\xcd\x84\xd0\x04\xe9\x56\xea\x20\x62\xb8\x31\x8a\x33\x4a\x91\x63\xeb\xd4\x89\x49\x02\x16\x35\x5b\x43\x7b\x3d\x4a\x42\x87\xd9\xa8\x17\x04\x36\x22\x01\x66\x88\xf5\x1c\x1f\xd9\xbe\x63\xd8\x66\x68\x87\x7e\x8f\xb6\x86\x86\x16\x0d\x69\xe8\xfb\x88\x31\xd7\x47\x84\x62\x07\x31\x97\xb8\xc8\xc3\x3d\x17\xb3\x90\x98\x3d\xcc\x5e\x3a\x61\xdf\x56\xec\x21\x44\xcb\xd2\x0e\x21\x3a\x28\xa4\xe5\x52\x78\xf5\xb6\xd1\x2d\xee\x3d\x31\x1f\xc0\xbd\x27\xf2\x03\xb8\x96\xf1\xbf\xe1\x6a\xd5\xe9\x9c\xbe\x3f\xdf\xf6\x02\xdd\xce\xef\x3b\x7a\xf0\xa3\x36\x85\xb9\xbc\x05\xed\xd9\x01\xa9\x89\x32\xd5\xf6\x2e\x62\x5a\x56\xcb\xb9\xe6\xc9\x52\xd5\xb2\xd0\x26\xa2\x84\xa2\xf5\xbd\xe1\xf9\x71\x19\xdc\x55\x85\xac\xa1\xe6\x5b\xec\x9a\xca\x47\x62\x0e\x51\x25\x12\xe8\x2a\xa5\xfd\x74\x3e\xd1\xd3\xb7\xa3\xf2\xbf\x3b\x9a\xff\xc3\xfc\x9b\x4f\xe2\x8f\xdc\x6c\x59\x55\xdd\xe3\x6c\x10\x02\x9c\xd8\x45\x60\x9a\x19\x22\x31\xc9\x50\x1c\x13\x1d\xb9\x22\x15\x34\x06\x48\x6c\x4a\x5a\xe0\x5c\x5b\x98\xc2\x06\x8a\xe2\xd8\xd4\x11\xa1\x31\x41\x02\xb0\x83\x6c\x6a\x1b\x6e\x26\x2c\x11\x5b\x2f\xee\x8e\x1d\x38\xea\xc0\xc5\x81\xa2\x0c\xdb\xc1\x36\xc5\x01\x32\x9c\xc0\x40\x04\xeb\x2e\x72\xdd\x30\x40\x3d\xd7\xc7\x86\xed\x59\x36\x0b\x83\x57\x1c\xb5\x44\x1c\x77\x07\xe9\x16\x7a\x60\x63\x7c\x4f\xe1\x1d\x20\x3a\x76\xf4\x6c\x2a\x8f\x7f\xe0\xb3\xaa\x5a\xbf\xc6\xf9\x44\x24\x37\xe2\x0a\xa6\x50\xc9\x26\x57\xb2\x5e\xf1\xe0\x4e\x41\xd9\xac\x9f\x30\xcb\xed\x73\x2e\xcb\x0b\x38\x5b\x55\xc0\x9a\x46\x26\xf9\xfa\x7d\xc3\x4f\x45\x51\xdc\x63\x7e\x8f\xad\xd5\xdd\xad\x43\xcb\x9b\xeb\xca\x32\xf5\x95\xbe\xb2\xf4\xd5\x1d\x50\x37\xc1\x7f\x2d\x45\x8a\xef\x8e\xda\x0c\xbb\x76\x3e\xa9\xe5\x55\xdf\x6f\x8e\x35\x78\x74\xaf\x2c\xcb\x15\x38\x33\x90\x81\x53\x1b\x61\x9c\x12\x14\xa7\x22\x43\xba\x9e\xe8\x24\xa3\x7a\xec\x66\xfa\x6b\xab\xe7\x28\xc4\xbf\x01\x00\x00\xff\xff\xdd\x48\x92\xe1\x84\x13\x00\x00")

func removerRegsRemovalofwindowssecurityactioncenterRegBytes() ([]byte, error) {
	return bindataRead(
		_removerRegsRemovalofwindowssecurityactioncenterReg,
		"Remover/REGS/RemovalofWindowsSecurityActionCenter.reg",
	)
}

func removerRegsRemovalofwindowssecurityactioncenterReg() (*asset, error) {
	bytes, err := removerRegsRemovalofwindowssecurityactioncenterRegBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "Remover/REGS/RemovalofWindowsSecurityActionCenter.reg", size: 4996, mode: os.FileMode(438), modTime: time.Unix(1704369724, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _removerRegsRemovedefendertasksReg = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb4\xce\x4f\x6a\xeb\x30\x10\x80\xf1\x7d\x4e\xe1\x0b\xcc\x63\x6c\x49\xd6\x68\x29\xcd\x48\xe4\xd1\xfc\x81\x24\x34\x94\x2a\x84\x90\xb8\x8d\x69\x89\xc1\x76\x28\xa5\xe4\xee\x5d\xb4\x3d\x42\x76\xdf\xea\xe3\xb7\x6d\x2f\xa7\xee\x63\x28\x56\xcd\x6b\x3b\x8c\xfd\x67\x11\x4f\xed\xd8\xf5\xc5\x63\xd3\x0f\x6d\x77\x29\xcc\x3f\xc4\xc9\xe4\x19\xa6\x0f\xf1\x69\x3f\x5b\xb2\x9f\xed\xe7\x9e\xa7\xff\x17\x31\xaf\x97\x69\xb3\xf5\xab\x98\xe7\xed\xb1\xef\x86\xee\x65\xcc\x7f\xb7\xc5\x26\xf3\xb5\xef\x9b\xcb\xf8\xfb\xc9\xeb\xe3\xb9\x39\x5d\xdf\x9b\xbc\x39\x0c\x6f\x7c\x38\x9e\x7f\x6a\xc8\x5f\xe8\x99\x5d\x89\x04\x15\x22\x82\xae\x19\x81\x34\x5a\x30\x49\x5c\x22\x67\xaa\x32\xd2\x6d\x77\x5f\x43\x29\xd6\x06\x66\x82\x52\xd0\x82\xae\x04\x81\x98\x1c\x28\xef\xa8\xb6\x5a\x52\xa8\xd3\xbd\x0d\xda\xbb\x4a\x29\x09\xe0\xad\x28\xd0\x46\x6a\x08\xda\xd6\x40\x6c\x85\x24\x59\x15\x83\xb9\xb7\x21\xa0\x49\x4a\xc7\x08\xa4\x52\x05\xba\x54\x02\x81\x4b\x01\x2b\x26\x48\x1d\x1d\x29\xc4\xdb\x6e\xf2\x1d\x00\x00\xff\xff\xe0\x7f\x48\xb6\x35\x02\x00\x00")

func removerRegsRemovedefendertasksRegBytes() ([]byte, error) {
	return bindataRead(
		_removerRegsRemovedefendertasksReg,
		"Remover/REGS/RemoveDefenderTasks.reg",
	)
}

func removerRegsRemovedefendertasksReg() (*asset, error) {
	bytes, err := removerRegsRemovedefendertasksRegBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "Remover/REGS/RemoveDefenderTasks.reg", size: 565, mode: os.FileMode(438), modTime: time.Unix(1704369724, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _removerRegsRemovesecurityandmaintenanceReg = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\xd4\x5b\x8a\xd4\x40\x14\xc6\xf1\xf7\x59\x45\x6f\xe0\x48\x5d\x4e\x9d\xaa\x7a\xac\x2b\x33\xd8\x4e\xa0\x33\x18\xc4\x48\x93\xab\x04\x64\x02\x9d\x01\x11\x71\xef\xbe\xe8\x5b\xeb\x24\x93\xde\xc0\xbf\x7e\x1c\xbe\xa4\x9a\x9e\xfb\xf9\xfb\x72\x38\x0d\x5f\xa7\xe5\xe5\xf2\xe3\x90\xfa\xe9\x65\xbe\x1c\x3e\x0e\x97\x65\x9a\x9f\x0f\xea\x1d\x63\x77\x77\x9f\xe1\xfe\x7d\xfa\x74\x0e\x47\x57\x96\xa9\x3c\x9f\x8a\xe2\xa9\x0e\xc7\xf2\x21\xd6\x3f\x19\x6f\xc6\x8e\x2b\x82\x51\x0c\x2d\x60\xc7\x3b\x68\xb4\x10\x60\x94\x62\xc8\x75\x2f\x2d\x8d\xbf\xbe\xfc\x37\xd1\xc8\x56\x76\x48\x1d\x30\xd5\x1b\x40\x61\x5b\x68\x47\x22\x30\x9a\x91\x69\xb1\x1b\x14\xc9\x7f\x25\xaa\xa2\x22\x94\xe2\x71\xee\x87\x5b\x88\xae\xe4\x36\xea\x8e\x45\x70\xc7\xf3\x07\x17\xee\x1f\x1e\x53\x5d\x16\xf9\xa9\x72\xa7\x54\x87\x6f\xcd\xb2\x0c\xcb\x1b\x8d\xeb\xa2\xb7\x95\xee\xbf\xec\xf6\x07\xf6\x2c\xe1\x4f\xc2\x7b\xc2\x6c\x9c\x06\x9f\x92\x06\x4c\xdc\x81\xf3\x26\x82\x8e\x46\x68\x99\x75\x8e\x9e\x5e\x49\x64\x45\x99\x72\x8c\xe0\x9c\x8d\x80\xc4\x0d\x38\x8b\x16\x02\xf7\x96\xbb\x8c\xd2\x73\xb7\x61\x40\x7b\x44\x57\x72\x1b\x75\xeb\xa6\xb3\xd1\xb8\x2e\x7a\x5b\xe9\xfe\xcb\x6e\x7f\x60\xcf\x12\xfe\x7e\x33\x2a\x4b\x45\x3c\x02\x93\xca\x00\x92\xd1\x60\x5c\x88\xe0\x24\x46\x81\x01\x8d\x89\xf9\xb5\x04\x05\x6d\x45\x36\x40\x82\x0b\xc0\x2c\x2d\xf8\xac\x19\x24\x13\x98\x0b\x96\x54\x10\x9b\xfe\x8f\x3b\x44\xd7\x72\xab\x74\xbf\x03\x00\x00\xff\xff\x80\x1d\xbb\xef\x68\x06\x00\x00")

func removerRegsRemovesecurityandmaintenanceRegBytes() ([]byte, error) {
	return bindataRead(
		_removerRegsRemovesecurityandmaintenanceReg,
		"Remover/REGS/RemoveSecurityandMaintenance.reg",
	)
}

func removerRegsRemovesecurityandmaintenanceReg() (*asset, error) {
	bytes, err := removerRegsRemovesecurityandmaintenanceRegBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "Remover/REGS/RemoveSecurityandMaintenance.reg", size: 1640, mode: os.FileMode(438), modTime: time.Unix(1704369724, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _removerRegsRemoveservicesReg = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xa4\x93\xcd\x6e\xea\x30\x10\x85\xf7\x79\x0a\x8b\xfd\xbd\xa2\x8b\x6e\x5a\x75\x11\x42\x10\x55\xf9\x13\x41\x8d\x50\x8d\x10\xb2\x87\x74\x54\xe3\x89\xc6\x43\x52\xde\xbe\x02\x1a\x56\x5d\x61\x2f\x6d\x9d\x4f\xa3\xf1\x77\x4a\xf4\x96\xda\xa0\x96\x50\x61\x10\x3e\xa9\xdc\xa2\x10\xab\x77\xe0\x80\xe4\xd5\xe3\xff\x7e\x3f\x49\x9e\xd5\x12\x0e\xd4\x80\x1a\xc2\x1e\xbc\x05\x56\x3b\x6f\x55\x97\x2d\xc0\x1c\x19\xe5\xa4\x0a\xe0\x06\x0d\x84\x24\xf9\xf8\x37\x7e\xcb\xd7\xdb\xc9\x3c\x4b\x27\xdb\x69\x9a\x8d\x5f\x67\xb9\x2e\xd6\xc5\x2a\x9f\xea\xec\xc8\x0c\x5e\x32\xf2\xc2\xe4\x0a\x10\xdd\xe5\xf4\x34\x14\x60\x32\x62\xd8\xdc\x8d\x68\x83\x09\x8d\xb9\x3f\x5f\xda\x19\x86\x21\x37\x91\x84\x22\x6e\x86\x11\x3a\x01\x8e\x21\x0c\x88\xe4\xfe\x7c\xf7\xa5\x63\xd8\x39\xf9\xfc\xbd\x8e\xc0\x55\x7c\x48\x2b\xf0\x31\x13\x55\x7c\x18\x30\x7d\x45\x6d\x05\xfd\x55\xe0\x33\xe2\x2f\xc2\x7c\xb4\x2a\xd3\x65\xae\x17\xe4\xd0\xe0\x59\x48\x34\x4c\x81\xf6\xa2\x3b\xd9\x6f\x0d\xb8\x59\x9f\x81\x17\x60\x9d\xd6\xf5\xa5\x15\x03\xa6\x36\x00\xab\x9a\x49\xc0\x08\x92\xdf\x24\xbd\x21\x86\x9d\x73\xd4\xe6\xdf\xb5\x23\x94\xc5\xed\x6d\xde\x00\x33\x5a\xe8\xbd\xd8\x96\xd8\x3e\xf5\xaf\xe7\x21\xae\x42\x23\x17\xb1\xe9\x0b\xa1\xdc\xd7\x9b\x9f\x00\x00\x00\xff\xff\x7c\xdb\x13\xbf\x1c\x04\x00\x00")

func removerRegsRemoveservicesRegBytes() ([]byte, error) {
	return bindataRead(
		_removerRegsRemoveservicesReg,
		"Remover/REGS/RemoveServices.reg",
	)
}

func removerRegsRemoveservicesReg() (*asset, error) {
	bytes, err := removerRegsRemoveservicesRegBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "Remover/REGS/RemoveServices.reg", size: 1052, mode: os.FileMode(438), modTime: time.Unix(1704369724, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _removerRegsRemoveshellassociationReg = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xcc\x93\x5f\x6b\x22\x31\x14\xc5\xdf\xfd\x14\x22\xf8\xa8\x68\x45\xf6\x0f\xec\xc3\x90\x4e\x69\x59\xa7\x96\x89\xd6\x2d\x1b\x19\x62\xe6\xea\x84\xc6\x24\xdc\x5c\x1d\xed\xa7\x5f\xb4\xea\xd2\x56\x2d\x65\x1f\xb6\x8f\x37\xdc\x9c\xfb\xbb\x27\x27\x23\x6d\x73\x57\x86\x6a\x0a\x33\x1d\x08\xd7\xd5\x38\xd7\xe4\xb0\x7a\x0f\x18\xb4\xb3\xd5\x6e\xb3\xd5\xaa\x54\x7e\x37\xae\x7f\xc6\x0f\x59\xaf\xcf\xa2\x5e\x96\x44\xec\xfa\xe6\x36\x16\xfc\x81\x0f\xe2\x44\xb0\x05\x22\x58\x62\xce\x12\x3a\xc3\x81\x04\x07\x5c\x6a\x05\x41\x8c\xb4\xbd\x84\x29\xd8\x7c\x7c\x90\x60\xc3\x34\x8d\x6f\x07\xd9\x90\xc7\xa9\xe0\x6e\x4a\xa5\x44\x10\x89\x56\xe8\x82\x9b\x92\xd8\xf1\x08\x5e\x80\x31\x22\x0a\xc1\x29\x2d\x49\x3b\x1b\xc4\x10\xcd\x8b\xba\x7c\x6e\xcd\xb7\x13\x00\xc7\xa7\x30\xfb\x57\x83\x51\x94\xc6\x82\x19\x19\x02\x04\x11\x79\x3f\x0c\x80\x89\xcb\xc1\xdc\xe4\xfb\x89\xcd\xcb\x7f\xd4\x39\xec\xd0\x3c\xad\xc8\x7a\x11\xe7\x31\xcf\xd2\x7e\x7f\xb0\xb9\xff\xeb\xdb\xe3\xf2\xa9\x83\xf9\xf2\x2b\x7d\xa1\x52\x5a\x09\x4f\x93\x72\xaa\xf2\x19\x4e\x66\x9d\x89\x7a\x6c\xbd\x67\xdc\x9e\x65\x1e\x1a\x6a\x55\x9c\x18\xd4\x73\x4a\x9a\x2a\x07\x22\x6d\x67\x41\x24\x48\x4c\xaa\x02\x04\xfb\x5e\xef\xb2\x1d\x6c\xbd\xcb\xf8\x3a\x10\xcc\x23\xef\x37\xc5\xdb\x6d\x22\xef\x53\xf0\x4d\x56\xac\x22\xef\x33\x55\x76\x6d\xbb\xb8\xa0\xd5\x1a\xca\x75\xbd\xcb\x10\x82\x5b\xa0\x82\xd0\xf4\xa8\x4f\x70\xec\x94\x8e\xd8\x72\x76\xb7\x8f\xf9\xf4\xce\xa3\x1d\x61\x38\x13\xed\x43\xa6\x5b\xad\xf6\xbe\x12\xc3\x89\x9f\x8f\x2b\x35\x86\x9a\xb4\x92\x26\x91\xda\x12\x58\x69\x15\x64\x7b\x59\x66\x40\xda\x85\xaf\xfd\x68\x9c\xef\xbb\x07\xd4\x53\xad\xb6\x81\xde\x34\x9f\x85\x79\xf3\xcf\xfe\x37\xd0\x0b\x77\x0e\x9f\x9e\x17\x12\x21\x8f\x94\x82\x10\xc4\x9d\x44\x39\x07\x02\x0c\xe2\x4a\x23\x94\xd2\x98\x3b\x67\xb4\x5a\x8b\x14\x02\xa1\x56\x04\xf9\xdf\x9b\x24\x49\x2b\xf1\x9c\xc3\x71\xa5\xf6\xea\xad\x1a\xed\x2d\xfe\xeb\xd3\x8b\xa3\xa7\x9d\x8f\xdb\xf9\x19\x37\xf8\x13\x00\x00\xff\xff\x99\x32\x4e\x2f\x9f\x05\x00\x00")

func removerRegsRemoveshellassociationRegBytes() ([]byte, error) {
	return bindataRead(
		_removerRegsRemoveshellassociationReg,
		"Remover/REGS/RemoveShellAssociation.reg",
	)
}

func removerRegsRemoveshellassociationReg() (*asset, error) {
	bytes, err := removerRegsRemoveshellassociationRegBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "Remover/REGS/RemoveShellAssociation.reg", size: 1439, mode: os.FileMode(438), modTime: time.Unix(1704369724, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _removerRegsRemovesignatureupdatesReg = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x64\xcf\x51\x4f\xc2\x30\x10\x07\xf0\xf7\x7e\x8a\x66\x1f\xc0\x0c\x83\x2f\x1a\x1f\x10\x46\x20\x02\x33\x0c\x24\xc6\x19\x52\xd7\x1b\xbb\xa4\xb4\xcb\xf5\x06\xe1\xdb\xfb\x30\x99\xb2\xf6\xb1\xfd\xdf\xef\xfe\xdd\xa1\xd5\xee\xec\xe5\x1a\x0e\xe8\x99\x2e\x32\xd1\xc8\x8e\xe4\x3b\x90\x47\x67\xe5\xc3\x5d\x1c\x0b\xf1\x24\xb9\x42\x2f\x4b\x34\x20\x35\x7a\xf5\x6d\xc0\xcb\x0c\x0f\x56\x71\x43\x20\xb7\xb5\x56\x0c\x5e\xa2\x95\x57\x6f\x02\x25\x58\x0d\x24\xc4\xe7\xec\x35\xf9\xd8\x2f\xd2\xf1\x68\xb1\x5f\x8e\xc6\xb3\xf9\x2a\xc9\xb3\x74\xba\xd9\x8d\xd6\x49\xfe\xe6\x0c\x16\x08\x3e\x5f\x62\x41\xce\xbb\x92\xf3\xbe\x90\x07\x7b\xbe\x44\xd4\xdd\x4d\xda\x36\x2b\xc7\x58\x62\xa1\x18\x9d\x8d\x9e\xf5\xd9\x91\x7e\x8c\xdb\x33\x10\xd1\x1a\x94\x61\x3c\xc2\xdf\x14\x18\x3c\x01\x5d\x7a\xd1\x58\x44\x53\x47\x05\xb4\x7b\xa6\xe4\x8e\xcb\x6d\x18\xf9\x5d\x99\x15\x15\xe8\xc6\x80\xee\xd4\x76\x2c\xb5\x2f\x8a\x39\xc4\x07\x22\xba\x06\x32\x56\xc4\xdb\x3a\xa4\x7b\xd4\x58\x71\x51\x35\xf5\xdc\x32\xd0\x49\x99\x5e\xfe\xbe\xab\x72\xe3\x36\xf5\x0e\xb9\x72\x0d\x27\xf6\x80\x16\xc2\x16\xd7\xe2\x1b\x3c\xde\xbc\x0e\x86\xc3\xff\xbf\x53\x36\xb5\x2d\x1c\x10\x3f\x01\x00\x00\xff\xff\xec\x9d\x3c\x20\x35\x02\x00\x00")

func removerRegsRemovesignatureupdatesRegBytes() ([]byte, error) {
	return bindataRead(
		_removerRegsRemovesignatureupdatesReg,
		"Remover/REGS/RemoveSignatureUpdates.reg",
	)
}

func removerRegsRemovesignatureupdatesReg() (*asset, error) {
	bytes, err := removerRegsRemovesignatureupdatesRegBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "Remover/REGS/RemoveSignatureUpdates.reg", size: 565, mode: os.FileMode(438), modTime: time.Unix(1704369724, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _removerRegsRemovestartupentriesReg = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xbc\xcf\x3d\x4b\x03\x41\x10\xc6\xf1\x7e\x3f\xc5\x70\x8d\x95\x92\xc6\x4a\x2c\x8e\x73\xe4\xc4\xbc\xc0\x5e\x62\x10\x57\x8e\x90\x9d\xe8\x42\xdc\x59\x66\x67\xa3\xf9\xf6\x22\x6c\x0a\x2b\xb1\x49\xfb\x34\xbf\xff\xb3\x0e\xd1\xf3\x67\x06\x4b\x6f\x21\xab\x1c\x01\x7d\x50\x16\x78\x22\xc9\x81\x23\x5c\x5f\x4d\x26\xc6\xdc\x80\xa5\x0f\x3e\x10\xdc\xd1\x8e\xa2\x27\xb9\xc8\x30\xe8\x46\xb4\x24\xc0\xa8\x12\x28\x1b\xf3\xd2\x3f\xe2\xf3\xd8\xad\xac\xc5\xf9\x72\x5c\x0d\x68\xdd\xb0\xb8\x5f\xae\x5b\x8b\x6e\x16\xb6\xc2\x99\x77\xea\x2a\xe8\xba\x22\x42\x51\xab\xe3\x6c\x89\xaf\xa6\x39\xd5\x9c\x98\xe6\xf6\xd2\x34\x03\x6d\x8b\x04\x3d\xf6\xb4\xd9\xeb\xfb\xcf\x54\xa9\xe9\xa2\x6b\xa7\xe3\xac\xed\xfa\x87\x39\xfe\xc3\xc2\xaf\xb4\x67\x21\x71\xf5\x42\x9b\x92\xf0\x81\xfc\x59\x23\x7e\x59\x7f\x50\xdf\x01\x00\x00\xff\xff\xde\x91\x20\xc7\xa5\x01\x00\x00")

func removerRegsRemovestartupentriesRegBytes() ([]byte, error) {
	return bindataRead(
		_removerRegsRemovestartupentriesReg,
		"Remover/REGS/RemoveStartupEntries.reg",
	)
}

func removerRegsRemovestartupentriesReg() (*asset, error) {
	bytes, err := removerRegsRemovestartupentriesRegBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "Remover/REGS/RemoveStartupEntries.reg", size: 421, mode: os.FileMode(438), modTime: time.Unix(1704369724, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _removerRegsRemovewindowsdefenderfirewallrulesReg = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xbc\x8f\x3f\x6f\xe2\x30\x1c\x40\x77\x3e\x45\xc4\xee\x53\x88\xed\xfc\x19\x6e\x48\x42\x10\xe8\xe0\x40\x18\x15\xa1\xba\x8a\x1c\xe7\x17\xb0\x6a\x62\xc9\x36\x20\x54\xf5\xbb\x57\xa5\x95\x58\xca\xda\xf9\xbd\x37\xbc\xad\xea\x5b\x73\x71\xc1\x1a\xf6\xca\x79\x7b\x0d\xaa\x56\x79\x63\x83\x27\xb0\x4e\x99\x3e\xa0\x7f\xc2\x70\x30\x78\x9e\xfe\xab\x76\xf5\x7c\x59\xe6\xf3\x7a\x91\x97\xd3\xd9\xff\x8a\xb3\x1d\xdb\x54\x0b\x5e\x9e\xac\x85\xde\x97\xa6\xf7\xd6\x68\x06\x9e\x33\xb0\x67\x25\xc1\x71\x76\x10\x16\xda\x5c\x4a\x70\x8e\xaf\x84\x15\x47\xf0\x60\x1d\x9f\x28\x0b\x17\xa1\xf5\xca\x68\x25\xaf\x7c\x0d\xce\x5b\x25\x3d\xb4\xf7\xd2\x0b\xaf\x24\x67\x57\xe7\xe1\xf8\x32\x18\x6e\xa1\xd9\x1c\x2c\x08\x3f\x86\x8e\x9d\x65\x9d\x6b\x6d\x2e\xf5\xac\x1f\xfe\x45\x8f\xe0\xf2\xe4\x7f\xa4\x85\x36\xf2\xf5\x51\xfa\x05\xbf\xd3\x5f\xbf\x2e\x4d\xdf\xa9\xfd\xc9\x8a\x46\xc3\xfd\xfd\x2d\xca\xe9\xa4\xca\x92\x31\x0a\x47\x39\x41\x24\xcf\x4a\x94\x46\x64\x84\x8a\x02\x27\x94\x16\x31\xad\xaa\xf0\xfd\xb6\x93\x44\x80\x31\x10\x82\x5a\x49\x24\x22\xa1\xa4\x48\xc4\x69\x8a\x44\x92\x34\x31\x64\x69\x2a\xe3\xec\x26\x36\x11\x4e\x93\xac\xa1\x68\x04\x1d\x46\x84\x36\x09\x4a\x33\x8c\x11\xa5\x44\x10\x1c\xe2\x36\xea\xf0\xa7\xf8\x11\x00\x00\xff\xff\x7f\xe4\xcb\xe3\x1e\x02\x00\x00")

func removerRegsRemovewindowsdefenderfirewallrulesRegBytes() ([]byte, error) {
	return bindataRead(
		_removerRegsRemovewindowsdefenderfirewallrulesReg,
		"Remover/REGS/RemoveWindowsDefenderFirewallRules.reg",
	)
}

func removerRegsRemovewindowsdefenderfirewallrulesReg() (*asset, error) {
	bytes, err := removerRegsRemovewindowsdefenderfirewallrulesRegBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "Remover/REGS/RemoveWindowsDefenderFirewallRules.reg", size: 542, mode: os.FileMode(438), modTime: time.Unix(1704369724, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _removerRegsRemovewindowswebthreatReg = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xc4\x91\xc1\x4a\xf3\x40\x14\x46\xf7\x7d\x8a\xbc\x40\x42\x9a\x3f\xc9\x5f\x97\xe3\x64\x42\x8b\x69\x03\x49\x34\x88\x29\x65\x9a\xdc\xc6\x0b\x75\xa6\xcc\x9d\x56\x45\x7c\x77\xa9\xad\xba\xd1\x8d\xd0\xba\x9c\xc3\xf0\x71\xb8\xa7\x46\xd5\xe9\x47\x72\x0a\xe8\x91\xac\x79\x76\x44\x87\x56\x1b\xe7\x06\x0c\xa1\x56\x4e\xe4\xf9\xfe\x60\x70\xe7\x8e\xaf\xc4\xed\x82\x67\xac\x2c\x45\xb9\x28\xf2\xbc\x6a\x78\x56\x4e\x92\xe6\x45\x84\xa3\xcb\x20\x0a\x2f\xdc\x24\x1a\xfa\x6e\xc8\xfe\xc7\xee\x88\x45\xa9\x9b\xf2\x61\x10\xb3\x38\x18\x46\xa9\xff\x3a\xff\x7e\xa2\xce\xeb\x38\xfc\x17\xcc\x74\x07\xbf\x9c\xcb\x72\xce\xb2\xc5\x94\xf1\xf1\x64\x26\x9a\x32\x4f\xab\x9a\x15\xa2\xe1\x6b\x49\x04\x74\x9a\xd1\x93\x59\x4f\xb1\x35\x9a\xf4\xca\x36\xc7\x2a\xc5\x56\x59\x7c\x80\x86\xb5\x16\x77\xd2\xca\xe5\x1a\xde\x25\x26\xdd\xd7\x5f\x2f\x57\xc0\xb5\x01\xaf\x86\x65\x75\x6f\x40\xda\x04\x56\xa0\x08\xbc\x12\xcc\x0e\x5b\xf0\xae\x09\x4c\x09\xb4\xcf\x79\x44\x53\xa9\x64\x0f\xe6\xdc\x42\x87\x97\x78\xda\x80\x41\x50\x9f\x1a\x3f\xf1\xbf\xd1\x2b\x80\x36\x5a\x11\x08\xd5\xa3\xfa\x80\x09\xb4\xb8\xbf\xdf\x01\x9e\x5b\x8c\x6b\xb5\xc2\x7e\x6b\xa4\x45\xad\xbc\xba\x4a\x0e\x45\xad\x45\xd5\xd3\x7c\xf0\x16\x00\x00\xff\xff\x9b\x38\xb8\xb3\xc3\x03\x00\x00")

func removerRegsRemovewindowswebthreatRegBytes() ([]byte, error) {
	return bindataRead(
		_removerRegsRemovewindowswebthreatReg,
		"Remover/REGS/RemoveWindowsWebThreat.reg",
	)
}

func removerRegsRemovewindowswebthreatReg() (*asset, error) {
	bytes, err := removerRegsRemovewindowswebthreatRegBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "Remover/REGS/RemoveWindowsWebThreat.reg", size: 963, mode: os.FileMode(438), modTime: time.Unix(1704369724, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _removerRegsRemoverofdefendercontextmenuReg = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xbc\x8f\xcd\x4e\xc2\x40\x14\x46\xf7\x3c\xc5\x84\x7d\x4d\xb1\x2d\x84\xb8\xaa\xa5\x04\x23\xd0\xa4\x43\x6c\x8c\x43\x48\x99\xb9\xc0\x48\x3b\x97\xdc\x99\xf2\x13\xe3\xbb\x1b\x23\xe8\x92\xe8\xc2\x07\x38\xe7\x3b\x5f\xa1\x8d\xc2\x83\x65\x39\xac\xb5\x75\x74\x62\xa9\xd2\x0e\x89\x3d\x01\x59\x8d\x86\x45\x37\xbe\xdf\x6a\xbd\x78\xa3\xc7\xf4\x79\x31\xce\x92\x78\xbc\x98\xc4\xc9\xe8\x61\x9a\x0a\x9e\x0d\x67\x45\x9c\xa7\xa2\xc8\x8a\x6e\x18\xdc\x4e\x51\x81\x98\x68\x49\x68\x71\xe5\xc4\xd9\x2c\x92\x86\x08\x8c\x3b\x0b\x45\x7a\xdc\x55\x48\x40\x82\x6f\xa0\xaa\x38\xd0\x5e\x4b\xc8\x96\xaf\x20\x9d\x15\x6f\x7d\xdf\x97\x7e\xaf\x1b\x78\x91\x2c\x95\x17\x96\x41\xe8\x2d\x65\x67\xe5\x85\xbe\x54\x51\x27\xe8\xf6\xfa\x2a\x7a\x9f\x5f\x0b\xfa\xa7\x88\x3b\x96\x43\x8d\x7b\x60\x6d\x2e\x4b\xc3\x0e\xda\x6d\xd8\x00\x56\x60\x14\x50\x9b\x25\x68\x1c\x1c\x1d\x9b\x80\x69\x7e\x1d\xfc\xed\xf9\xf9\x9a\x8c\x63\xce\x53\xbe\xc8\xb3\x6c\x26\x86\x58\x29\x20\x61\x3f\xf3\x2f\xcc\x15\x64\x00\x76\xeb\x70\x77\x5f\xca\xed\x9a\xb0\x31\xea\xeb\xfc\x85\xe6\x20\x1b\xd2\xee\xf4\x87\x41\x91\x60\x5d\x97\x46\xcd\x5b\x1f\x01\x00\x00\xff\xff\x67\x61\xcd\xc1\x4e\x02\x00\x00")

func removerRegsRemoverofdefendercontextmenuRegBytes() ([]byte, error) {
	return bindataRead(
		_removerRegsRemoverofdefendercontextmenuReg,
		"Remover/REGS/RemoverofDefenderContextMenu.reg",
	)
}

func removerRegsRemoverofdefendercontextmenuReg() (*asset, error) {
	bytes, err := removerRegsRemoverofdefendercontextmenuRegBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "Remover/REGS/RemoverofDefenderContextMenu.reg", size: 590, mode: os.FileMode(438), modTime: time.Unix(1704369724, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _removerRegsWindowssettingspagevisibilityReg = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x2c\xcc\xd1\xca\x82\x30\x14\x00\xe0\xfb\x3d\xc5\xd8\x03\xfc\x78\xf3\xdf\x14\x5d\x88\x2c\x8c\x34\x45\x43\x89\x16\x52\xee\x68\x07\x64\x8b\xb3\x13\xe6\xdb\x77\x91\x2f\xf0\xb5\xe8\xac\x9f\x83\xac\x60\xc4\xc0\xb4\x48\x6d\x91\x3d\xc9\x06\x28\xa0\x77\xf2\xff\x2f\x8a\x84\xb8\xa6\x47\x7d\xe9\xb2\x22\x89\xb3\x2e\x8f\x93\xf4\x70\xd2\xa6\x2e\xf6\xe7\x36\xae\xb4\xc9\xb1\x27\x1f\xfc\xc0\x66\xc5\x4c\xf2\x26\x02\xc7\xab\x61\x4a\x3f\x61\x8f\x10\x8c\xfe\xbc\x26\x4f\x40\x37\xa1\x6a\x60\x46\x37\x86\xf2\x3e\x42\x83\x01\x1f\x38\x21\x2f\x6a\xa7\x9e\x68\x61\x33\xff\x20\x0b\x03\x38\x0b\xb4\x55\xe2\x1b\x00\x00\xff\xff\x3b\x24\x00\x84\xa8\x00\x00\x00")

func removerRegsWindowssettingspagevisibilityRegBytes() ([]byte, error) {
	return bindataRead(
		_removerRegsWindowssettingspagevisibilityReg,
		"Remover/REGS/WindowsSettingsPageVisibility.reg",
	)
}

func removerRegsWindowssettingspagevisibilityReg() (*asset, error) {
	bytes, err := removerRegsWindowssettingspagevisibilityRegBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "Remover/REGS/WindowsSettingsPageVisibility.reg", size: 168, mode: os.FileMode(438), modTime: time.Unix(1704369724, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _removerTklTxt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x8c\x41\x0a\x02\x31\x10\x04\xef\x3e\xc6\x47\xb8\x82\x7b\x14\x57\xf0\x3c\x0c\x0d\x06\x36\x13\xe9\x99\x88\xf9\xbd\x24\xec\x31\xc7\xae\x6a\x6a\x29\xf9\x23\xf1\xc4\xfe\xa8\x66\xe0\x19\x3f\x9c\xae\xf8\x26\xc5\x02\xf3\xea\x03\xdc\x24\xe3\x22\xbc\x13\x0e\x53\xbc\x98\xe2\xb8\x6e\xd0\xca\x14\x6d\x85\xec\xf1\x5e\x8b\xc7\x04\x6f\x60\x0f\xce\x4c\xf3\xa0\xb4\x61\x3c\x0b\xc3\x95\x80\xf5\xfd\x0f\x00\x00\xff\xff\x9d\x64\xc4\x85\x99\x00\x00\x00")

func removerTklTxtBytes() ([]byte, error) {
	return bindataRead(
		_removerTklTxt,
		"Remover/TKL.txt",
	)
}

func removerTklTxt() (*asset, error) {
	bytes, err := removerTklTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "Remover/TKL.txt", size: 153, mode: os.FileMode(438), modTime: time.Unix(1706593228, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"Remover/DDL.txt":                                                    removerDdlTxt,
	"Remover/DDL22.txt":                                                  removerDdl22Txt,
	"Remover/FDL.txt":                                                    removerFdlTxt,
	"Remover/REGS/Antivirus_d.reg":                                       removerRegsAntivirus_dReg,
	"Remover/REGS/DisableAntivirusProtection.reg":                        removerRegsDisableantivirusprotectionReg,
	"Remover/REGS/DisableDefenderPolicies.reg":                           removerRegsDisabledefenderpoliciesReg,
	"Remover/REGS/DisableDefenderandSecurityCenterNotifications.reg":     removerRegsDisabledefenderandsecuritycenternotificationsReg,
	"Remover/REGS/DisableDevDriveProtection.reg":                         removerRegsDisabledevdriveprotectionReg,
	"Remover/REGS/DisableLSAProtection.reg":                              removerRegsDisablelsaprotectionReg,
	"Remover/REGS/DisableMaintenanceTaskreportinginSecurityHealthUI.reg": removerRegsDisablemaintenancetaskreportinginsecurityhealthuiReg,
	"Remover/REGS/DisableMicrosoftVulnerabileDriverBlocklist.reg":        removerRegsDisablemicrosoftvulnerabiledriverblocklistReg,
	"Remover/REGS/DisableSmartScreen.reg":                                removerRegsDisablesmartscreenReg,
	"Remover/REGS/DisableSpyNetTelemetry.reg":                            removerRegsDisablespynettelemetryReg,
	"Remover/REGS/DisableSystemMitigations.reg":                          removerRegsDisablesystemmitigationsReg,
	"Remover/REGS/DisableTamperProtection.reg":                           removerRegsDisabletamperprotectionReg,
	"Remover/REGS/DisableUAC.reg":                                        removerRegsDisableuacReg,
	"Remover/REGS/DisableVBS.reg":                                        removerRegsDisablevbsReg,
	"Remover/REGS/ExploitGuard_d.reg":                                    removerRegsExploitguard_dReg,
	"Remover/REGS/MitigationofFaultTorelantHeap.reg":                     removerRegsMitigationoffaulttorelantheapReg,
	"Remover/REGS/NomoreDelayandTimeouts.reg":                            removerRegsNomoredelayandtimeoutsReg,
	"Remover/REGS/RemovalofAnti-PhishingServices.reg":                    removerRegsRemovalofantiPhishingservicesReg,
	"Remover/REGS/RemovalofSecHealthUI.reg":                              removerRegsRemovalofsechealthuiReg,
	"Remover/REGS/RemovalofWindowsDefenderAntivirus.reg":                 removerRegsRemovalofwindowsdefenderantivirusReg,
	"Remover/REGS/RemovalofWindowsSecurityActionCenter.reg":              removerRegsRemovalofwindowssecurityactioncenterReg,
	"Remover/REGS/RemoveDefenderTasks.reg":                               removerRegsRemovedefendertasksReg,
	"Remover/REGS/RemoveSecurityandMaintenance.reg":                      removerRegsRemovesecurityandmaintenanceReg,
	"Remover/REGS/RemoveServices.reg":                                    removerRegsRemoveservicesReg,
	"Remover/REGS/RemoveShellAssociation.reg":                            removerRegsRemoveshellassociationReg,
	"Remover/REGS/RemoveSignatureUpdates.reg":                            removerRegsRemovesignatureupdatesReg,
	"Remover/REGS/RemoveStartupEntries.reg":                              removerRegsRemovestartupentriesReg,
	"Remover/REGS/RemoveWindowsDefenderFirewallRules.reg":                removerRegsRemovewindowsdefenderfirewallrulesReg,
	"Remover/REGS/RemoveWindowsWebThreat.reg":                            removerRegsRemovewindowswebthreatReg,
	"Remover/REGS/RemoverofDefenderContextMenu.reg":                      removerRegsRemoverofdefendercontextmenuReg,
	"Remover/REGS/WindowsSettingsPageVisibility.reg":                     removerRegsWindowssettingspagevisibilityReg,
	"Remover/TKL.txt":                                                    removerTklTxt,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//
//	data/
//	  foo.txt
//	  img/
//	    a.png
//	    b.png
//
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"Remover": &bintree{nil, map[string]*bintree{
		"DDL.txt":   &bintree{removerDdlTxt, map[string]*bintree{}},
		"DDL22.txt": &bintree{removerDdl22Txt, map[string]*bintree{}},
		"FDL.txt":   &bintree{removerFdlTxt, map[string]*bintree{}},
		"REGS": &bintree{nil, map[string]*bintree{
			"Antivirus_d.reg":                                       &bintree{removerRegsAntivirus_dReg, map[string]*bintree{}},
			"DisableAntivirusProtection.reg":                        &bintree{removerRegsDisableantivirusprotectionReg, map[string]*bintree{}},
			"DisableDefenderPolicies.reg":                           &bintree{removerRegsDisabledefenderpoliciesReg, map[string]*bintree{}},
			"DisableDefenderandSecurityCenterNotifications.reg":     &bintree{removerRegsDisabledefenderandsecuritycenternotificationsReg, map[string]*bintree{}},
			"DisableDevDriveProtection.reg":                         &bintree{removerRegsDisabledevdriveprotectionReg, map[string]*bintree{}},
			"DisableLSAProtection.reg":                              &bintree{removerRegsDisablelsaprotectionReg, map[string]*bintree{}},
			"DisableMaintenanceTaskreportinginSecurityHealthUI.reg": &bintree{removerRegsDisablemaintenancetaskreportinginsecurityhealthuiReg, map[string]*bintree{}},
			"DisableMicrosoftVulnerabileDriverBlocklist.reg":        &bintree{removerRegsDisablemicrosoftvulnerabiledriverblocklistReg, map[string]*bintree{}},
			"DisableSmartScreen.reg":                                &bintree{removerRegsDisablesmartscreenReg, map[string]*bintree{}},
			"DisableSpyNetTelemetry.reg":                            &bintree{removerRegsDisablespynettelemetryReg, map[string]*bintree{}},
			"DisableSystemMitigations.reg":                          &bintree{removerRegsDisablesystemmitigationsReg, map[string]*bintree{}},
			"DisableTamperProtection.reg":                           &bintree{removerRegsDisabletamperprotectionReg, map[string]*bintree{}},
			"DisableUAC.reg":                                        &bintree{removerRegsDisableuacReg, map[string]*bintree{}},
			"DisableVBS.reg":                                        &bintree{removerRegsDisablevbsReg, map[string]*bintree{}},
			"ExploitGuard_d.reg":                                    &bintree{removerRegsExploitguard_dReg, map[string]*bintree{}},
			"MitigationofFaultTorelantHeap.reg":                     &bintree{removerRegsMitigationoffaulttorelantheapReg, map[string]*bintree{}},
			"NomoreDelayandTimeouts.reg":                            &bintree{removerRegsNomoredelayandtimeoutsReg, map[string]*bintree{}},
			"RemovalofAnti-PhishingServices.reg":                    &bintree{removerRegsRemovalofantiPhishingservicesReg, map[string]*bintree{}},
			"RemovalofSecHealthUI.reg":                              &bintree{removerRegsRemovalofsechealthuiReg, map[string]*bintree{}},
			"RemovalofWindowsDefenderAntivirus.reg":                 &bintree{removerRegsRemovalofwindowsdefenderantivirusReg, map[string]*bintree{}},
			"RemovalofWindowsSecurityActionCenter.reg":              &bintree{removerRegsRemovalofwindowssecurityactioncenterReg, map[string]*bintree{}},
			"RemoveDefenderTasks.reg":                               &bintree{removerRegsRemovedefendertasksReg, map[string]*bintree{}},
			"RemoveSecurityandMaintenance.reg":                      &bintree{removerRegsRemovesecurityandmaintenanceReg, map[string]*bintree{}},
			"RemoveServices.reg":                                    &bintree{removerRegsRemoveservicesReg, map[string]*bintree{}},
			"RemoveShellAssociation.reg":                            &bintree{removerRegsRemoveshellassociationReg, map[string]*bintree{}},
			"RemoveSignatureUpdates.reg":                            &bintree{removerRegsRemovesignatureupdatesReg, map[string]*bintree{}},
			"RemoveStartupEntries.reg":                              &bintree{removerRegsRemovestartupentriesReg, map[string]*bintree{}},
			"RemoveWindowsDefenderFirewallRules.reg":                &bintree{removerRegsRemovewindowsdefenderfirewallrulesReg, map[string]*bintree{}},
			"RemoveWindowsWebThreat.reg":                            &bintree{removerRegsRemovewindowswebthreatReg, map[string]*bintree{}},
			"RemoverofDefenderContextMenu.reg":                      &bintree{removerRegsRemoverofdefendercontextmenuReg, map[string]*bintree{}},
			"WindowsSettingsPageVisibility.reg":                     &bintree{removerRegsWindowssettingspagevisibilityReg, map[string]*bintree{}},
		}},
		"TKL.txt": &bintree{removerTklTxt, map[string]*bintree{}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}
